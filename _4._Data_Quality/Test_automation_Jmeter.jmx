<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Kimball&apos;s Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="DEV_connection" enabled="false">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">pool_2</stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://localhost:5432/acme_dev</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">tester_KI</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">tester</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="PROD_connection" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">pool_1</stringProp>
        <stringProp name="dbUrl">jdbc:redshift://*****</stringProp>
        <stringProp name="driver">com.amazon.redshift.jdbc42.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">tester_KI@1</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">acme_tester</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Testing LND_LAYER" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_archived_stocks_evening" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_evening&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1966251917">lnd_fact_archived_stocks_evening</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_archived_stocks_morning" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_morning&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="287948489">lnd_fact_archived_stocks_morning</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_archived_stocks_evening" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_evening&apos;
ORDER BY ordinal_position;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-857281863">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_archived_stocks_evening	w_id	YES	character varying	256
lnd_fact_archived_stocks_evening	date_id	YES	character varying	256
lnd_fact_archived_stocks_evening	product_id	YES	character varying	256
lnd_fact_archived_stocks_evening	stock	YES	character varying	256
lnd_fact_archived_stocks_evening	stock_in_packages	YES	character varying	256
lnd_fact_archived_stocks_evening	part_id	YES	character varying	256
lnd_fact_archived_stocks_evening	insert_dt	YES	timestamp without time zone	null
lnd_fact_archived_stocks_evening	update_dt	YES	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_archived_stocks_morning" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_morning&apos;
ORDER BY ordinal_position;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1320792257">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_archived_stocks_morning	w_id	YES	character varying	256
lnd_fact_archived_stocks_morning	date_id	YES	character varying	256
lnd_fact_archived_stocks_morning	product_id	YES	character varying	256
lnd_fact_archived_stocks_morning	stock	YES	character varying	256
lnd_fact_archived_stocks_morning	stock_in_packages	YES	character varying	256
lnd_fact_archived_stocks_morning	part_id	YES	character varying	256
lnd_fact_archived_stocks_morning	insert_dt	YES	timestamp without time zone	null
lnd_fact_archived_stocks_morning	update_dt	YES	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_fact_archived_stocks_morning and external_schema.factarchivedstocks_morning" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">(select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_morning fm
except 
select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_morning lfasm)
union all
(select 
w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_morning lfasm 
except 
select 
w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_morning fm);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.llnd_fact_archived_stocks_evening and external_schema.factarchivedstocks_evening" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">(select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_evening fe 
except 
select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_evening lfase)
union all
(select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_evening lfase
except 
select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_evening fe);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_archived_stocks_morning" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, part_id, COUNT(*)
FROM lnd.lnd_fact_archived_stocks_morning
GROUP BY w_id, date_id, product_id, stock, stock_in_packages, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_archived_stocks_evening" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, part_id, COUNT(*)
FROM lnd.lnd_fact_archived_stocks_evening
GROUP BY w_id, date_id, product_id, stock, stock_in_packages, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd_fact_archived_stocks_evening and external_schema.factarchivedstocks_evening" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count (*) from external_schema.factarchivedstocks_evening fe 
except 
select count(*) from lnd.lnd_fact_archived_stocks_evening lfase  ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd_fact_archived_stocks_morning and external_schema.factarchivedstocks_morning" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count (*) from external_schema.factarchivedstocks_morning fm 
except 
select count(*) from lnd.lnd_fact_archived_stocks_morning lfasm;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Testing 3NF_LAYER" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_customers" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_customers&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1086525256">ce_customers</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_distributors&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="12743209">ce_distributors</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_networks" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_networks&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1226432322">ce_networks</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_statuses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_statuses&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-756945355">ce_outlet_statuses</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_products" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_products&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1090796383">ce_products</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_types" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_types&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-755670004">ce_product_types</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_groups" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_groups&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1965375649">ce_product_groups</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_categories" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_categories&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-380338583">ce_product_categories</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_card_h&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-690435506">ce_outlet_card_h</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_purchases" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchases&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-194637835">ce_purchases</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_sales" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1282906385">ce_sales</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_customers" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_customers&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="691188212">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_customers	cust_id	NO	integer	null
ce_customers	cust_name	NO	character varying	60
ce_customers	cust_name_en	NO	character varying	60
ce_customers	distr_id	NO	integer	null
ce_customers	insert_dt	NO	timestamp without time zone	null
ce_customers	src_cust_id	NO	character varying	50
ce_customers	src_table	NO	character varying	100
ce_customers	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_distributors&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1369949307">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_distributors	distr_id	NO	integer	null
ce_distributors	distr_name	NO	character varying	50
ce_distributors	distr_name_en	NO	character varying	50
ce_distributors	insert_dt	NO	timestamp without time zone	null
ce_distributors	src_distr_id	NO	character varying	50
ce_distributors	src_table	NO	character varying	100
ce_distributors	update_dt	NO	timestamp without time zone	null
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_networks" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_networks&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="443798710">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_networks	insert_dt	NO	timestamp without time zone	null
ce_networks	network_id	NO	integer	null
ce_networks	network_name	NO	character varying	40
ce_networks	network_name_en	NO	character varying	40
ce_networks	src_network_id	NO	character varying	50
ce_networks	src_table	NO	character varying	100
ce_networks	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_statuses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_statuses&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="863645300">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_outlet_statuses	insert_dt	NO	timestamp without time zone	null
ce_outlet_statuses	src_status	NO	character varying	50
ce_outlet_statuses	src_table	NO	character varying	100
ce_outlet_statuses	status_id	NO	integer	null
ce_outlet_statuses	status_name	NO	character varying	20
ce_outlet_statuses	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_products" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_products&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-685937497">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_products	end_dt	NO	timestamp without time zone	null
ce_products	insert_dt	NO	timestamp without time zone	null
ce_products	is_active	NO	character varying	10
ce_products	product_code	NO	character varying	10
ce_products	product_id	NO	integer	null
ce_products	product_name	NO	character varying	100
ce_products	product_name_en	NO	character varying	100
ce_products	product_type_id	NO	integer	null
ce_products	src_product_id	NO	character varying	50
ce_products	src_table	NO	character varying	100
ce_products	start_dt	NO	timestamp without time zone	null
ce_products	update_dt	NO	timestamp without time zone	null
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_types" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_types&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-736114495">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_types	insert_dt	NO	timestamp without time zone	null
ce_product_types	product_group_id	NO	integer	null
ce_product_types	product_type_id	NO	integer	null
ce_product_types	product_type_name	NO	character varying	40
ce_product_types	product_type_name_en	NO	character varying	40
ce_product_types	src_product_type_id	NO	character varying	50
ce_product_types	src_table	NO	character varying	100
ce_product_types	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_groups" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_groups&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-307336740">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_groups	insert_dt	NO	timestamp without time zone	null
ce_product_groups	product_category_id	NO	integer	null
ce_product_groups	product_group_id	NO	integer	null
ce_product_groups	product_group_name	NO	character varying	60
ce_product_groups	product_group_name_en	NO	character varying	60
ce_product_groups	src_product_group_id	NO	character varying	50
ce_product_groups	src_table	NO	character varying	100
ce_product_groups	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_categories" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_categories&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-234592211">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_categories	insert_dt	NO	timestamp without time zone	null
ce_product_categories	product_category_id	NO	integer	null
ce_product_categories	product_category_name	NO	character varying	30
ce_product_categories	product_category_name_en	NO	character varying	30
ce_product_categories	src_product_category_id	NO	character varying	50
ce_product_categories	src_table	NO	character varying	100
ce_product_categories	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_card_h&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="25626262">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_outlet_card_h	begin_time	NO	date	null
ce_outlet_card_h	date_id	NO	date	null
ce_outlet_card_h	end_time	NO	date	null
ce_outlet_card_h	insert_dt	NO	timestamp without time zone	null
ce_outlet_card_h	merch_id	NO	integer	null
ce_outlet_card_h	ol_card_date	NO	date	null
ce_outlet_card_h	ol_card_id	NO	integer	null
ce_outlet_card_h	ol_id	NO	integer	null
ce_outlet_card_h	src_ol_card_id	NO	character varying	50
ce_outlet_card_h	src_table	NO	character varying	100
ce_outlet_card_h	success	NO	smallint	null
ce_outlet_card_h	update_dt	NO	timestamp without time zone	null</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_purchases" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name, 
      column_name, 
      column_default,
      is_nullable,
  data_type,
  character_maximum_length,
  numeric_precision,
  numeric_scale
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchases&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1937704386">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_purchases	amount	null	NO	numeric	null	19	11
ce_purchases	insert_dt	null	NO	timestamp without time zone	null	null	null
ce_purchases	package_qty	null	NO	numeric	null	23	17
ce_purchases	price	null	NO	numeric	null	13	8
ce_purchases	product_id	null	NO	integer	null	32	0
ce_purchases	product_qty	null	NO	numeric	null	10	3
ce_purchases	purchase_id	default_identity(206643, 0, &apos;1,1&apos;::text)	NO	integer	null	32	0
ce_purchases	purchase_invoice_id	null	NO	integer	null	32	0
ce_purchases	src_table	null	NO	character varying	100	null	null
ce_purchases	update_dt	null	NO	timestamp without time zone	null	null	null
ce_purchases	weight_kg	null	NO	numeric	null	23	17</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_sales" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
	table_name, 
     column_name, 
     column_default,
     is_nullable,
	data_type,
	character_maximum_length,
	numeric_precision,
 	numeric_scale
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-758912375">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_sales	amount	null	NO	numeric	null	19	11
ce_sales	insert_dt	null	NO	timestamp without time zone	null	null	null
ce_sales	invoice_id	null	NO	integer	null	32	0
ce_sales	package_qty	null	NO	numeric	null	23	17
ce_sales	price	null	NO	numeric	null	13	8
ce_sales	product_id	null	NO	integer	null	32	0
ce_sales	product_qty	null	NO	numeric	null	10	3
ce_sales	sale_id	default_identity(245544, 0, &apos;1,1&apos;::text)	NO	integer	null	32	0
ce_sales	src_table	null	NO	character varying	100	null	null
ce_sales	update_dt	null	NO	timestamp without time zone	null	null	null
ce_sales	weight_kg	null	NO	numeric	null	23	17</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table ce_customers" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_customers&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1890855091">conname	condef
fk_ce_customers_distr_id	FOREIGN KEY (distr_id) REFERENCES bl_3nf.ce_distributors(distr_id)
pk_ce_customers	PRIMARY KEY (cust_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_distributors&apos;::regclass
order by conname;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2100169301">conname	condef
pk_ce_distributors	PRIMARY KEY (distr_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_networks" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_networks&apos;::regclass
order by conname;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1107677396">conname	condef
pk_ce_networks	PRIMARY KEY (network_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_outlet_statuses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_statuses&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1365769423">conname	condef
pk_ce_outlet_statuses	PRIMARY KEY (status_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_products" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_products&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1815256241">conname	condef
ce_products_2_pkey1	PRIMARY KEY (product_id, start_dt)
fk_ce_products_product_type_id	FOREIGN KEY (product_type_id) REFERENCES bl_3nf.ce_product_types(product_type_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_types" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_types&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1670198733">conname	condef
fk_ce_product_types_product_group_id	FOREIGN KEY (product_group_id) REFERENCES bl_3nf.ce_product_groups(product_group_id)
pk_ce_product_types	PRIMARY KEY (product_type_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_groups" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_groups&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1535664763">conname	condef
fk_ce_product_groups_product_category_id	FOREIGN KEY (product_category_id) REFERENCES bl_3nf.ce_product_categories(product_category_id)
pk_ce_product_groups	PRIMARY KEY (product_group_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_categories" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_categories&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="119964557">conname	condef
pk_ce_product_categories	PRIMARY KEY (product_category_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_card_h&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2061493885">conname	condef
fk_ce_outlet_card_h_merch_id	FOREIGN KEY (merch_id) REFERENCES bl_3nf.ce_merchandisers(merch_id)
fk_ce_outlet_card_h_ol_id	FOREIGN KEY (ol_id) REFERENCES bl_3nf.ce_outlets(ol_id)
pk_outlet_card_h	PRIMARY KEY (ol_card_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_purchases" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_purchases&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1195448030">conname	condef
fk_ce_purchases_purchase_invoice_id	FOREIGN KEY (purchase_invoice_id) REFERENCES bl_3nf.ce_purchase_invoices(purchase_invoice_id)
pk_ce_purchases	PRIMARY KEY (purchase_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_sales" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_sales&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1521829947">conname	condef
fk_ce_sales_invoice_id	FOREIGN KEY (invoice_id) REFERENCES bl_3nf.ce_sales_invoices(invoice_id)
pk_ce_sales	PRIMARY KEY (sale_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_customers" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT cust_id, cust_name, cust_name_en, distr_id, distr_id, src_table, COUNT(*)
FROM bl_3nf.ce_customers
GROUP BY cust_id, cust_name, cust_name_en, distr_id, distr_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT distr_id, distr_name, distr_name_en, src_distr_id, src_table, COUNT(*)
FROM bl_3nf.ce_distributors
GROUP BY distr_id, distr_name, distr_name_en, src_distr_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_networks" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT network_id, network_name, network_name_en, src_network_id, src_table, COUNT(*)
FROM bl_3nf.ce_networks
GROUP BY network_id, network_name, network_name_en, src_network_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_statuses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT status_id, status_name, src_status, src_table, COUNT(*)
FROM bl_3nf.ce_outlet_statuses
GROUP BY status_id, status_name, src_status, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_products" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_id, product_name, product_name_en, product_code, product_type_id, src_product_id, src_table, COUNT(*)
FROM bl_3nf.ce_products
GROUP BY product_id, product_name, product_name_en, product_code, product_type_id, src_product_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_types" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_type_id, product_type_name, product_type_name_en, product_group_id, src_product_type_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_types
GROUP BY product_type_id, product_type_name, product_type_name_en, product_group_id, src_product_type_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_groups" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_group_id, product_group_name, product_group_name_en, product_category_id, src_product_group_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_groups
GROUP BY product_group_id, product_group_name, product_group_name_en, product_category_id, src_product_group_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_categories" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_category_id, product_category_name, product_category_name_en, src_product_category_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_categories
GROUP BY product_category_id, product_category_name, product_category_name_en, src_product_category_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT ol_card_id, date_id, merch_id, ol_id, success, ol_card_date, begin_time, end_time, src_ol_card_id, src_table, COUNT(*)
FROM bl_3nf.ce_outlet_card_h
GROUP BY ol_card_id, date_id, merch_id, ol_id, success, ol_card_date, begin_time, end_time, src_ol_card_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_purchases" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT purchase_id, purchase_invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table, COUNT(*)
FROM bl_3nf.ce_purchases
GROUP BY purchase_id, purchase_invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_sales" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT sale_id, invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table, COUNT(*)
FROM bl_3nf.ce_sales
GROUP BY sale_id, invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_customers and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">(SELECT cust_name
	, cust_name_en
	, src_cust_id
	, src_table
FROM bl_3nf.ce_customers
where cust_id != -9999
EXCEPT
(SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(m.cust_name_en, &apos; &apos;))
	, initcap(btrim(m.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(o.cust_name_en, &apos; &apos;))
	, initcap(btrim(o.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name))
union all
((SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(m.cust_name_en, &apos; &apos;))
	, initcap(btrim(m.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(o.cust_name_en, &apos; &apos;))
	, initcap(btrim(o.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
except 
(SELECT cust_name
	, cust_name_en
	, src_cust_id
	, src_table
FROM bl_3nf.ce_customers
where cust_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_distributors and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT distr_name
	, distr_name_en
	, src_distr_id
	, src_table
FROM bl_3nf.ce_distributors
where distr_id != -9999
EXCEPT
(SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE m.distr_id WHEN &apos;8&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(m.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE o.distr_id WHEN &apos;8&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(o.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
union
((SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE m.distr_id WHEN &apos;8&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(m.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE o.distr_id WHEN &apos;8&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(o.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
except
(SELECT distr_name
	, distr_name_en
	, src_distr_id
	, src_table
FROM bl_3nf.ce_distributors
where distr_id != -9999))
order by distr_name, src_table;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_networks and lnd_dim_outlets" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT network_name
	, network_name_en
	, src_network_id
FROM bl_3nf.ce_networks
where network_id != -9999
EXCEPT
(SELECT distinct 
	 initcap(btrim(network_name, &apos; &apos;))
	, initcap(btrim(network_name_en, &apos; &apos;))
	, initcap(btrim(network_id, &apos; &apos;)) as src_network_id
FROM lnd.lnd_dim_outlets)
union
((SELECT distinct 
	initcap(btrim(network_name, &apos; &apos;))
	, initcap(btrim(network_name_en, &apos; &apos;))
	, initcap(btrim(network_id, &apos; &apos;)) as src_network_id
FROM lnd.lnd_dim_outlets)
except
(SELECT network_name
	, network_name_en
	, src_network_id
FROM bl_3nf.ce_networks
where network_id != -9999))
order by network_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_outlet_statuses and lnd_dim_outlets" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT status_name
	, src_status
	, src_table
FROM bl_3nf.ce_outlet_statuses
where status_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(status_name, &apos; &apos;))
	, initcap(btrim(status, &apos; &apos;))
	, &apos;lnd_dim_outlets&apos; as src_table
FROM lnd.lnd_dim_outlets)
union
(SELECT distinct 
	initcap(btrim(status_name, &apos; &apos;))
	, initcap(btrim(status, &apos; &apos;))
	, &apos;lnd_dim_outlets&apos; as src_table
FROM lnd.lnd_dim_outlets
except
(SELECT status_name
	, src_status
	, src_table
FROM bl_3nf.ce_outlet_statuses
where status_id != -9999))
order by status_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_products and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_name
	, product_name_en
	, product_code
	, src_table
FROM bl_3nf.ce_products
where product_id != -9999
EXCEPT
(SELECT distinct 
	INITCAP(REPLACE(TRIM(product_name), chr(160), &apos;&apos;))
	, INITCAP(REPLACE(TRIM(product_name_en), chr(160), &apos;&apos;))
	, upper(btrim(product_code, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	INITCAP(REPLACE(TRIM(product_name), chr(160), &apos;&apos;))
	, INITCAP(REPLACE(TRIM(product_name_en), chr(160), &apos;&apos;))
	, upper(btrim(product_code, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_name
	, product_name_en
	, product_code
	, src_table
FROM bl_3nf.ce_products
where product_id != -9999))
order by product_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_types and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_type_name
	, product_type_name_en
	, src_product_type_id
	, src_table
FROM bl_3nf.ce_product_types
where product_type_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_type_name, &apos; &apos;))
	, initcap(btrim(product_type_name_en, &apos; &apos;))
	, initcap(btrim(product_type_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_type_name, &apos; &apos;))
	, initcap(btrim(product_type_name_en, &apos; &apos;))
	, initcap(btrim(product_type_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_type_name
	, product_type_name_en
	, src_product_type_id
	, src_table
FROM bl_3nf.ce_product_types
where product_type_id != -9999))
order by product_type_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_groups and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_group_name
	, product_group_name_en
	, src_product_group_id
	, src_table
FROM bl_3nf.ce_product_groups
where product_group_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_group_name, &apos; &apos;))
	, initcap(btrim(prod_group_name_en, &apos; &apos;))
	, initcap(btrim(prod_group_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_group_name, &apos; &apos;))
	, initcap(btrim(prod_group_name_en, &apos; &apos;))
	, initcap(btrim(prod_group_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_group_name
	, product_group_name_en
	, src_product_group_id
	, src_table
FROM bl_3nf.ce_product_groups
where product_group_id != -9999))
order by product_group_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_categories and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_category_name
	, product_category_name_en
	, src_product_category_id
	, src_table
FROM bl_3nf.ce_product_categories
where product_category_id != -99999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_category_name, &apos; &apos;))
	, initcap(btrim(prod_category_name_en, &apos; &apos;))
	, initcap(btrim(prod_category_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_category_name, &apos; &apos;))
	, initcap(btrim(prod_category_name_en, &apos; &apos;))
	, initcap(btrim(prod_category_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_category_name
	, product_category_name_en
	, src_product_category_id
	, src_table
FROM bl_3nf.ce_product_categories
where product_category_id != -99999))
order by product_category_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_outlet_card_h and lnd_fact_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT date_id
	, success
	, ol_card_date
	, begin_time
	, end_time
	, src_ol_card_id
	, src_table
FROM bl_3nf.ce_outlet_card_h
where ol_card_id != -9999
EXCEPT
(SELECT TO_DATE(date_id, &apos;yyyymmdd&apos;)
	, success::integer
	, TO_DATE(TO_DATE(ol_card_date, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as ol_card_date
	, TO_DATE(TO_DATE(begin_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as begin_time
	, TO_DATE(TO_DATE(end_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as end_time
	, ol_card_id AS src_ol_card_id
	, &apos;lnd_fact_outlet_card_h&apos; AS src_table
FROM lnd.lnd_fact_outlet_card_h
)
union
((SELECT TO_DATE(date_id, &apos;yyyymmdd&apos;)
	, success::integer
	, TO_DATE(TO_DATE(ol_card_date, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as ol_card_date
	, TO_DATE(TO_DATE(begin_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as begin_time
	, TO_DATE(TO_DATE(end_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as end_time
	, ol_card_id AS src_ol_card_id
	, &apos;lnd_fact_outlet_card_h&apos; AS src_table
FROM lnd.lnd_fact_outlet_card_h)
except 
(SELECT date_id
	, success
	, ol_card_date
	, begin_time
	, end_time
	, src_ol_card_id
	, src_table
FROM bl_3nf.ce_outlet_card_h
where ol_card_id != -9999))
order by ol_card_date, src_ol_card_id;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_purchases and lnd_fact_sal_in_d" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_purchases
where purchase_id != -9999
EXCEPT
(SELECT ABS(to_number(product_qty, &apos;9999999.999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999.99999999999999999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999.99999999999999999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999.99999999999&apos;)) amount
	, ABS(to_number(price, &apos;9999999.99999999&apos;)) price
	, &apos;lnd_fact_sal_in_d&apos; AS src_table
FROM lnd.lnd_fact_sal_in_d
)
union
((SELECT ABS(to_number(product_qty, &apos;9999999.999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999.99999999999999999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999.99999999999999999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999.99999999999&apos;)) amount
	, ABS(to_number(price, &apos;9999999.99999999&apos;)) price
	, &apos;lnd_fact_sal_in_d&apos; AS src_table
FROM lnd.lnd_fact_sal_in_d)
except 
(select product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_purchases
where purchase_id != -9999))
order by product_qty, package_qty, weight_kg, amount, price;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_sales and lnd_fact_sal_out_d" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_sales
where sale_id != -99999
EXCEPT
(SELECT ABS(to_number(product_qty, &apos;9999999.999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999.99999999999999999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999.99999999999999999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999.99999999999&apos;)) amount
	, ABS(to_number(price, &apos;9999999.99999999&apos;)) price
	, &apos;lnd_fact_sal_out_d&apos; AS src_table
FROM lnd.lnd_fact_sal_out_d
)
union
((SELECT ABS(to_number(product_qty, &apos;9999999.999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999.99999999999999999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999.99999999999999999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999.99999999999&apos;)) amount
	, ABS(to_number(price, &apos;9999999.99999999&apos;)) price
	, &apos;lnd_fact_sal_out_d&apos; AS src_table
FROM lnd.lnd_fact_sal_out_d)
except 
(select product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_sales
where sale_id != -99999
))
order by product_qty, package_qty, weight_kg, amount, price;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_customers and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_customers cc 
where cust_id != -9999
except 
(SELECT count (distinct cust_name)
FROM 
(select distinct cust_name
from lnd.lnd_dim_outlets
union
select distinct cust_name
FROM lnd.lnd_dim_merchandisers
union
select distinct cust_name
FROM lnd.lnd_dim_warehouses w)aaa)
UNION
((SELECT count (distinct cust_name)
FROM 
(select distinct cust_name
from lnd.lnd_dim_outlets
union
select distinct cust_name
FROM lnd.lnd_dim_merchandisers
union
select distinct cust_name
FROM lnd.lnd_dim_warehouses w)aaa)
except 
(select count(*) from bl_3nf.ce_customers cc 
where cust_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Number of rows Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1354575653">count
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_distributors and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_distributors cc 
where distr_id != -9999
except 
(SELECT count (distinct distr_id)
FROM 
(select distinct distr_id 
from lnd.lnd_dim_outlets
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_warehouses w) aaa)
union 
((SELECT count (distinct distr_id)
FROM 
(select distinct distr_id 
from lnd.lnd_dim_outlets
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_warehouses w) aaa)
except 
select count(*) from bl_3nf.ce_distributors cc 
where distr_id != -9999);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Number of rows Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1354575653">count
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_networks and lnd_dim_outlets" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_networks cc 
where network_id != -9999
except 
(SELECT count (distinct network_id)
FROM lnd.lnd_dim_outlets)
union
((SELECT count (distinct network_id)
FROM lnd.lnd_dim_outlets)
except
(select count(*) from bl_3nf.ce_networks cc 
where network_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_outlet_statuses and lnd_dim_outlets" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_outlet_statuses cc 
where status_id != -9999
except 
(SELECT count (distinct status_name)
FROM lnd.lnd_dim_outlets)
union 
((SELECT count (distinct status_name)
FROM lnd.lnd_dim_outlets
except
select count(*) from bl_3nf.ce_outlet_statuses cc 
where status_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_products and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_products cc 
where product_id != -9999
except 
(SELECT count (distinct product_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct product_id)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_products cc 
where product_id != -9999)</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_types and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_product_types cc 
where product_group_id != -9999
except 
(SELECT count (distinct product_type_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct product_type_id)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_product_types cc 
where product_group_id != -9999)</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_groups and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_product_groups cc 
where product_group_id != -9999
except 
(SELECT count (distinct prod_group_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct prod_group_id)
FROM lnd.lnd_dim_product
except 
(select count(*) from bl_3nf.ce_product_groups cc 
where product_group_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_categories and lnd_dim_product" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_product_categories cc 
where product_category_id != -9999
except 
(SELECT count (distinct prod_category_name)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct prod_category_name)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_product_categories cc 
where product_category_id != -9999)</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_outlet_card_h and lnd_fact_outlet_card_h" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_outlet_card_h cc 
where ol_card_id != -9999
except 
(SELECT count (distinct ol_card_id)
FROM lnd.lnd_fact_outlet_card_h)
UNION
((SELECT count (distinct ol_card_id)
FROM lnd.lnd_fact_outlet_card_h
)
except 
(select count(*) from bl_3nf.ce_outlet_card_h cc 
where ol_card_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_purchases and lnd_fact_sal_in_d" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_purchases cc 
where purchase_id != -9999
except 
(SELECT count (*)
FROM lnd.lnd_fact_sal_in_d)
UNION
((SELECT count (*)
FROM lnd.lnd_fact_sal_in_d
)
except 
(select count(*) from bl_3nf.ce_purchases cc 
where purchase_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_sales and lnd_fact_sal_out_d" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_3nf.ce_sales cc 
where sale_id != -9999
except 
(SELECT count (*)
FROM lnd.lnd_fact_sal_out_d)
UNION
((SELECT count (*)
FROM lnd.lnd_fact_sal_out_d
)
except 
(select count(*) from bl_3nf.ce_sales cc 
where sale_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Testing DM_LAYER" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table dim_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_dm&apos;
AND table_name = &apos;dim_distributors&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1204807619">dim_distributors</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table dim_invoices" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_dm&apos;
AND table_name = &apos;dim_invoices&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">name</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1104046269">dim_invoices</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">name_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table dim_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    column_default,
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_dm&apos;
AND table_name = &apos;dim_distributors&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1891387016">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length
dim_distributors	country_id	null	NO	integer	null
dim_distributors	country_name	null	NO	character varying	20
dim_distributors	distrib_id	null	NO	integer	null
dim_distributors	distrib_name	null	NO	character varying	50
dim_distributors	insert_dt	null	NO	timestamp without time zone	null
dim_distributors	src_distrib_id	null	YES	character varying	50
dim_distributors	src_table	null	NO	character varying	100
dim_distributors	surr_distrib_id	default_identity(460335, 0, (&apos;1,1&apos;::character varying)::text)	NO	integer	null
dim_distributors	update_dt	null	NO	timestamp without time zone	null
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table dim_invoices" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    column_default,
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_dm&apos;
AND table_name = &apos;dim_invoices&apos;
order by column_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1412386734">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length
dim_invoices	date_dt	null	NO	date	null
dim_invoices	doc_name	null	NO	character varying	20
dim_invoices	doc_type_id	null	NO	integer	null
dim_invoices	insert_dt	null	NO	timestamp without time zone	null
dim_invoices	invoice_id	null	NO	integer	null
dim_invoices	invoice_no	null	NO	character varying	25
dim_invoices	src_table	null	NO	character varying	100
dim_invoices	status	null	NO	integer	null
dim_invoices	status_name	null	NO	character varying	20
dim_invoices	surr_customer_id	null	NO	integer	null
dim_invoices	surr_invoice_id	default_identity(460815, 0, (&apos;1,1&apos;::character varying)::text)	NO	integer	null
dim_invoices	surr_merch_id	null	NO	integer	null
dim_invoices	surr_outlet_id	null	NO	integer	null
dim_invoices	update_dt	null	NO	timestamp without time zone	nul</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table dim_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_dm.dim_distributors&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1130390953">conname	condef
dim_distributors_pkey	PRIMARY KEY (surr_distrib_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table dim_invoices" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_dm.dim_invoices&apos;::regclass
order by conname;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="780660722">conname	condef
dim_invoices_pkey	PRIMARY KEY (surr_invoice_id)
fk_dim_invoices_date_dt	FOREIGN KEY (date_dt) REFERENCES bl_dm.dim_dates(date_id)
fk_dim_invoices_surr_customer_id	FOREIGN KEY (surr_customer_id) REFERENCES bl_dm.dim_customers(surr_customer_id)
fk_dim_invoices_surr_merch_id	FOREIGN KEY (surr_merch_id) REFERENCES bl_dm.dim_merchandisers(surr_merch_id)
fk_dim_invoices_surr_outlet_id	FOREIGN KEY (surr_outlet_id) REFERENCES bl_dm.dim_outlets(surr_outlet_id)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table dim_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT surr_distrib_id, surr_distrib_id, country_id, country_name, distrib_id, src_table, COUNT(*)
FROM bl_dm.dim_distributors
GROUP BY surr_distrib_id, surr_distrib_id, country_id, country_name, distrib_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table dim_invoices" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT surr_invoice_id, invoice_id, invoice_no, surr_merch_id, surr_outlet_id, surr_customer_id, date_dt, status, status_name, doc_type_id, doc_name, COUNT(*)
FROM bl_dm.dim_invoices
GROUP BY surr_invoice_id, invoice_id, invoice_no, surr_merch_id, surr_outlet_id, surr_customer_id, date_dt, status, status_name, doc_type_id, doc_name
HAVING COUNT(*) &gt; 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">dupl</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">dupl_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_dm.dim_distributors and bl_dim_distributors etc" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT distrib_name
	, country_id
	, country_name
	, distrib_id
	, src_table
	, src_distrib_id
FROM bl_dm.dim_distributors
where surr_distrib_id != -9999
EXCEPT
(SELECT COALESCE(src.distr_name, &apos;N/A&apos;) AS distrib_name,
 		COALESCE(cntr.country_id, -9999) AS country_id,
 		COALESCE(cntr.country_name, &apos;N/A&apos;) AS country_name,
	    COALESCE(src.distr_id, -9999) AS distrib_id,
	    &apos;ce_distributors&apos; AS src_table,
	    COALESCE(src.src_distr_id, &apos;N/A&apos;) AS src_distrib_id
        FROM bl_3nf.ce_distributors src
        LEFT JOIN bl_3nf.ce_customers cust ON src.distr_id = cust.distr_id 
        LEFT JOIN bl_3nf.ce_warehouses wareh ON cust.cust_id = wareh.cust_id 
        LEFT JOIN bl_3nf.ce_cities cit ON wareh.city_id = cit.city_id 
        LEFT JOIN bl_3nf.ce_districts distr ON cit.district_id = distr.district_id 
        LEFT JOIN bl_3nf.ce_regions reg ON distr.region_id = reg.region_id 
        LEFT JOIN bl_3nf.ce_countries cntr ON reg.country_id = cntr.country_id 
        WHERE src.distr_id != -9999
)
union
((SELECT COALESCE(src.distr_name, &apos;N/A&apos;) AS distrib_name,
 		COALESCE(cntr.country_id, -9999) AS country_id,
 		COALESCE(cntr.country_name, &apos;N/A&apos;) AS country_name,
	    COALESCE(src.distr_id, -9999) AS distrib_id,
	    &apos;ce_distributors&apos; AS src_table,
	    COALESCE(src.src_distr_id, &apos;N/A&apos;) AS src_distrib_id
        FROM bl_3nf.ce_distributors src
        LEFT JOIN bl_3nf.ce_customers cust ON src.distr_id = cust.distr_id 
        LEFT JOIN bl_3nf.ce_warehouses wareh ON cust.cust_id = wareh.cust_id 
        LEFT JOIN bl_3nf.ce_cities cit ON wareh.city_id = cit.city_id 
        LEFT JOIN bl_3nf.ce_districts distr ON cit.district_id = distr.district_id 
        LEFT JOIN bl_3nf.ce_regions reg ON distr.region_id = reg.region_id 
        LEFT JOIN bl_3nf.ce_countries cntr ON reg.country_id = cntr.country_id 
        WHERE src.distr_id != -9999)
except 
(SELECT distrib_name
	, country_id
	, country_name
	, distrib_id
	, src_table
	, src_distrib_id
FROM bl_dm.dim_distributors
where surr_distrib_id != -9999))
order by distrib_name, country_name, distrib_id;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables dim_invoices and bl_3nf.ce_sales_invoices, bl_3nf.ce_invoice_statuses, bl_3nf.ce_doc_types" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT invoice_id
	, invoice_no
	, date_dt
	, status
	, status_name
	, doc_type_id
	, doc_name
	, &apos;ce_sales_invoices&apos; AS src_table
FROM bl_dm.dim_invoices
where surr_invoice_id != -9999
EXCEPT
(SELECT invoice_id
	, invoice_no
	, date_id
	, cis.status_id
	, cis.status_name
	, cdt.doc_type_id
	, cdt.doc_type_name
	, &apos;ce_sales_invoices&apos; AS src_table
FROM bl_3nf.ce_sales_invoices csi 
left join bl_3nf.ce_invoice_statuses cis on csi.status_id = cis.status_id
left join bl_3nf.ce_doc_types cdt on csi.doc_type_id = cdt.doc_type_id
)
union
((SELECT invoice_id
	, invoice_no
	, date_id
	, cis.status_id
	, cis.status_name
	, cdt.doc_type_id
	, cdt.doc_type_name
	, &apos;ce_sales_invoices&apos; AS src_table
FROM bl_3nf.ce_sales_invoices csi 
left join bl_3nf.ce_invoice_statuses cis on csi.status_id = cis.status_id
left join bl_3nf.ce_doc_types cdt on csi.doc_type_id = cdt.doc_type_id)
except 
(SELECT invoice_id
	, invoice_no
	, date_dt
	, status
	, status_name
	, doc_type_id
	, doc_name
	, &apos;ce_sales_invoices&apos; AS src_table
FROM bl_dm.dim_invoices
where surr_invoice_id != -9999))
order by invoice_id, invoice_no, date_dt, status, status_name, doc_type_id, doc_name;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">row</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">row_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_dm.dim_distributors and bl_3nf.ce_distributors" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_dm.dim_distributors cc 
where surr_distrib_id != -9999
except 
(SELECT count (*)
FROM bl_3nf.ce_distributors
WHERE distr_id != -9999)
UNION
((SELECT count (*)
FROM bl_3nf.ce_distributors
WHERE distr_id != -9999)
except 
(select count(*) from bl_dm.dim_distributors cc 
where surr_distrib_id != -9999));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_dm.dim_invoices and bl_3nf.ce_sales_invoices" enabled="true">
          <stringProp name="dataSource">pool_1</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) from bl_dm.dim_invoices cc 
except 
(SELECT count (*)
FROM bl_3nf.ce_sales_invoices)
UNION
((SELECT count (*)
FROM bl_3nf.ce_sales_invoices)
except 
(select count(*) from bl_dm.dim_invoices cc));</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">result</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_#</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Testing LND_LAYER_previus" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Controller for execution all tests for two environments" enabled="true">
          <stringProp name="ForeachController.inputVal">pool</stringProp>
          <stringProp name="ForeachController.returnVal">pool_1</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_time on LND_LAYER" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_time&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1323233119">lnd_dim_time</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_invoices_in" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_invoices_in&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1696360650">lnd_dim_invoices_in</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_evening&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1966251917">lnd_fact_archived_stocks_evening</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_morning&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="287948489">lnd_fact_archived_stocks_morning</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_invoices_in&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-84095031">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_dim_invoices_in	invoice_id	YES	character varying	256
lnd_dim_invoices_in	invoice_no	YES	character varying	256
lnd_dim_invoices_in	date_id	YES	character varying	256
lnd_dim_invoices_in	cust_id	YES	character varying	256
lnd_dim_invoices_in	doc_type	YES	character varying	256
lnd_dim_invoices_in	doc_type_name	YES	character varying	256
lnd_dim_invoices_in	insert_dt	YES	timestamp without time zone	null
lnd_dim_invoices_in	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_time" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT column_name,
	   is_nullable,
	   data_type,
	   character_maximum_length
	   FROM information_schema.columns
WHERE table_schema = &apos;lnd&apos; AND table_name = &apos;lnd_dim_time&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="336653579">column_name	is_nullable	data_type	character_maximum_length
time_id	YES	character varying	256
hour_id	YES	character varying	256
hour_name	YES	character varying	256
time_name	YES	character varying	256
insert_dt	YES	timestamp without time zone	null
update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_evening&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-857281863">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_archived_stocks_evening	w_id	YES	character varying	256
lnd_fact_archived_stocks_evening	date_id	YES	character varying	256
lnd_fact_archived_stocks_evening	product_id	YES	character varying	256
lnd_fact_archived_stocks_evening	stock	YES	character varying	256
lnd_fact_archived_stocks_evening	stock_in_packages	YES	character varying	256
lnd_fact_archived_stocks_evening	part_id	YES	character varying	256
lnd_fact_archived_stocks_evening	insert_dt	YES	timestamp without time zone	null
lnd_fact_archived_stocks_evening	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_archived_stocks_morning&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1320792257">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_archived_stocks_morning	w_id	YES	character varying	256
lnd_fact_archived_stocks_morning	date_id	YES	character varying	256
lnd_fact_archived_stocks_morning	product_id	YES	character varying	256
lnd_fact_archived_stocks_morning	stock	YES	character varying	256
lnd_fact_archived_stocks_morning	stock_in_packages	YES	character varying	256
lnd_fact_archived_stocks_morning	part_id	YES	character varying	256
lnd_fact_archived_stocks_morning	insert_dt	YES	timestamp without time zone	null
lnd_fact_archived_stocks_morning	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_fact_archived_stocks_morning and external_schema.factarchivedstocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_morning fm
except 
select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_morning lfasm)
union all
(select 
w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_morning lfasm 
except 
select 
w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_morning fm);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_time and external_schema.dimtime" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">((SELECT time_id,
		hour_id,
		hour_name,
		time_name
FROM lnd.lnd_dim_time)
EXCEPT
(SELECT timeid,
		hourid,
		hourname,
		timename
FROM external_schema.dimtime))
UNION ALL
((SELECT timeid,
		hourid,
		hourname,
		timename
FROM external_schema.dimtime)
EXCEPT
(SELECT time_id,
		hour_id,
		hour_name,
		time_name
FROM lnd.lnd_dim_time));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.llnd_fact_archived_stocks_evening and external_schema.factarchivedstocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_evening fe 
except 
select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_evening lfase)
union all
(select w_id,
date_id,
product_id,
stock,
stock_in_packages,
part_id
from lnd.lnd_fact_archived_stocks_evening lfase
except 
select w_id as w_id,
date_id as date_id,
product_id as product_id,
stock as stock,
stockinpackages as stock_in_packages,
part_id as part_id 
from external_schema.factarchivedstocks_evening fe);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_invoices_in and external_schema.diminvoicesin" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT invoice_id, invoice_no, date_id, cust_id, doc_type, doctypename 
FROM external_schema.diminvoicesin
EXCEPT
SELECT invoice_id, invoice_no, date_id, cust_id, doc_type, doc_type_name 
FROM lnd.lnd_dim_invoices_in)
UNION ALL 
(SELECT invoice_id, invoice_no, date_id, cust_id, doc_type, doc_type_name 
FROM lnd.lnd_dim_invoices_in
EXCEPT
SELECT invoice_id, invoice_no, date_id, cust_id, doc_type, doctypename 
FROM external_schema.diminvoicesin);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, part_id, COUNT(*)
FROM lnd.lnd_fact_archived_stocks_morning
GROUP BY w_id, date_id, product_id, stock, stock_in_packages, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, part_id, COUNT(*)
FROM lnd.lnd_fact_archived_stocks_evening
GROUP BY w_id, date_id, product_id, stock, stock_in_packages, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the uniquiness in a table lnd_dim_time_duplicates" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*) FROM lnd.lnd_dim_time ldt 
GROUP BY time_id 
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_dim_invoices_in" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_id, invoice_no, date_id, cust_id, doc_type, doc_type_name, COUNT(*)
FROM lnd.lnd_dim_invoices_in
GROUP BY invoice_id, invoice_no, date_id, cust_id, doc_type, doc_type_name
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_invoices on LND_LAYER" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_invoices&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-991832390">lnd_dim_invoices</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_invoices&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1347393503">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_dim_invoices	invoice_id	YES	character varying	256
lnd_dim_invoices	invoice_no	YES	character varying	256
lnd_dim_invoices	merch_id	YES	character varying	256
lnd_dim_invoices	ol_id	YES	character varying	256
lnd_dim_invoices	date_id	YES	character varying	256
lnd_dim_invoices	status	YES	character varying	256
lnd_dim_invoices	status_name	YES	character varying	256
lnd_dim_invoices	cust_id	YES	character varying	256
lnd_dim_invoices	doc_type	YES	character varying	256
lnd_dim_invoices	doc_type_name	YES	character varying	256
lnd_dim_invoices	insert_dt	YES	timestamp without time zone	null
lnd_dim_invoices	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_invoices and external_schema.diminvoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT invoice_id, invoice_no, merch_id, ol_id, date_id, status, statusname, cust_id, doc_type, doctypename
FROM external_schema.diminvoices
EXCEPT
SELECT invoice_id, invoice_no, merch_id, ol_id, date_id, status, status_name, cust_id, doc_type, doc_type_name
FROM lnd.lnd_dim_invoices)
UNION ALL 
(SELECT invoice_id, invoice_no, merch_id, ol_id, date_id, status, status_name, cust_id, doc_type, doc_type_name
FROM lnd.lnd_dim_invoices
EXCEPT
SELECT invoice_id, invoice_no, merch_id, ol_id, date_id, status, statusname, cust_id, doc_type, doctypename 
FROM external_schema.diminvoices);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_dim_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_id, invoice_no, merch_id, ol_id, date_id, status, status_name, cust_id, doc_type, doc_type_name, COUNT(*)
FROM lnd.lnd_dim_invoices
GROUP BY invoice_id, invoice_no, merch_id, ol_id, date_id, status, status_name, cust_id, doc_type, doc_type_name
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_sal_in_d&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1877524063">lnd_fact_sal_in_d</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_sal_in_d&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1050959184">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_sal_in_d	invoice_id	YES	character varying	256
lnd_fact_sal_in_d	invoice_no	YES	character varying	256
lnd_fact_sal_in_d	date_id	YES	character varying	256
lnd_fact_sal_in_d	product_id	YES	character varying	256
lnd_fact_sal_in_d	product_qty	YES	character varying	256
lnd_fact_sal_in_d	package_qty	YES	character varying	256
lnd_fact_sal_in_d	weight_kg	YES	character varying	256
lnd_fact_sal_in_d	amount	YES	character varying	256
lnd_fact_sal_in_d	cust_id	YES	character varying	256
lnd_fact_sal_in_d	price	YES	character varying	256
lnd_fact_sal_in_d	part_id	YES	character varying	256
lnd_fact_sal_in_d	insert_dt	YES	timestamp without time zone	null
lnd_fact_sal_in_d	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd_fact_archived_stocks_evening and external_schema.factarchivedstocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count (*) from external_schema.factarchivedstocks_evening fe 
except 
select count(*) from lnd.lnd_fact_archived_stocks_evening lfase  ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in table lnd_dim_time" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*) FROM lnd.lnd_dim_time;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1511391">1440</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the validity of a table lnd_dim_time_time_id" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT test_result
FROM
	(SELECT time_id,
       		time_name,
       		CASE time_id WHEN time_name THEN &apos;PASSED&apos; ELSE &apos;FAILED&apos; END AS test_result
	FROM    
		(SELECT 
				CASE LENGTH(time_id) WHEN 1 THEN &apos;000&apos; || time_id
									WHEN 2 THEN  &apos;00&apos; || time_id
									WHEN 3 THEN   &apos;0&apos; || time_id
									ELSE time_id END,						
					 REPLACE(time_name, &apos;:&apos;, &apos;&apos;) AS time_name
FROM lnd.lnd_dim_time) tab1) tab2;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Logic Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1942051728">PASSED</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the validity of a table lnd_dim_time and collumn hour_id" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT time_id
FROM
(SELECT time_id,
       hour_id,
CASE SUBSTRING (time_name, 1, 2) WHEN &apos;00&apos; THEN &apos;0&apos;
ELSE TRIM(LEADING &apos;0&apos; FROM SUBSTRING (time_name, 1, 2)) END AS hour_from_timename
FROM lnd.lnd_dim_time ldt) tab1
WHERE hour_id != hour_from_timename ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Logic Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the validity of a table lnd_dim and collumn time_id" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT time_id FROM
(SELECT time_id :: INTEGER,
        REPLACE (SUBSTRING (hour_name, 1, 5), &apos;:&apos;, &apos;&apos;) :: INTEGER AS left_bound_txt,
        REPLACE (SUBSTRING (hour_name, 9, 5), &apos;:&apos;, &apos;&apos;) :: INTEGER  AS right_bound_txt 
 FROM lnd.lnd_dim_time) AS tab1
 WHERE time_id NOT BETWEEN left_bound_txt AND right_bound_txt;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Logic Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd_fact_archived_stocks_morning and external_schema.factarchivedstocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count (*) from external_schema.factarchivedstocks_morning fm 
except 
select count(*) from lnd.lnd_fact_archived_stocks_morning lfasm;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the completeness of a table lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*), SUM(cast(amount AS NUMERIC(20, 11))), AVG(cast(product_qty  AS NUMERIC(20, 11)))
FROM external_schema.factsalind
EXCEPT
SELECT COUNT(*), SUM(cast(amount AS NUMERIC(20, 11))), AVG(cast(product_qty  AS NUMERIC(20, 11)))
FROM lnd.lnd_fact_sal_in_d;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weight_kg, amount, cust_id, price, part_id, COUNT(*)
FROM lnd.lnd_fact_sal_in_d
GROUP BY invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weight_kg, amount, cust_id, price, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_sal_out_d&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1932065980">lnd_fact_sal_out_d</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_sal_out_d&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1028181568">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_sal_out_d	invoice_id	YES	character varying	256
lnd_fact_sal_out_d	invoice_no	YES	character varying	256
lnd_fact_sal_out_d	order_no	YES	character varying	256
lnd_fact_sal_out_d	merch_id	YES	character varying	256
lnd_fact_sal_out_d	ol_id	YES	character varying	256
lnd_fact_sal_out_d	date_id	YES	character varying	256
lnd_fact_sal_out_d	status	YES	character varying	256
lnd_fact_sal_out_d	status_name	YES	character varying	256
lnd_fact_sal_out_d	product_id	YES	character varying	256
lnd_fact_sal_out_d	product_qty	YES	character varying	256
lnd_fact_sal_out_d	package_qty	YES	character varying	256
lnd_fact_sal_out_d	weight_kg	YES	character varying	256
lnd_fact_sal_out_d	amount	YES	character varying	256
lnd_fact_sal_out_d	cust_id	YES	character varying	256
lnd_fact_sal_out_d	price	YES	character varying	256
lnd_fact_sal_out_d	part_id	YES	character varying	256
lnd_fact_sal_out_d	insert_dt	YES	timestamp without time zone	null
lnd_fact_sal_out_d	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the completeness of a table lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*), SUM(cast(amount AS NUMERIC(20, 11))), AVG(cast(product_qty  AS NUMERIC(20, 11)))
FROM external_schema.factsaloutd
EXCEPT 
SELECT COUNT(*), SUM(cast(amount AS NUMERIC(20, 11))), AVG(cast(product_qty  AS NUMERIC(20, 11)))
FROM lnd.lnd_fact_sal_out_d;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weight_kg, amount, cust_id, price, part_id, COUNT(*)
FROM lnd.lnd_fact_sal_out_d
GROUP BY invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weight_kg, amount, cust_id, price, part_id
HAVING COUNT(*) &gt; 1
EXCEPT
SELECT invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weightkg, amount, cust_id, price, part_id, COUNT(*)
FROM external_schema.factsaloutd
GROUP BY invoice_id, invoice_no, date_id, product_id, product_qty, package_qty, weightkg, amount, cust_id, price, part_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_distribution&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-539279968">lnd_fact_outlet_distribution</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_distribution&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1775632127">table_schema	table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	udt_name
lnd	lnd_fact_outlet_distribution	ol_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	merch_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	date_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	product_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	present_qty	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	price	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	present_amount	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	weight	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	begin_minute_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	end_minute_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	minutes_spent	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	part_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_distribution	insert_dt	null	YES	timestamp without time zone	null	timestamp
lnd	lnd_fact_outlet_distribution	update_dt	null	YES	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd.lnd_fact_outlet_distribution and external_schema.factoutletdistribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM lnd.lnd_fact_outlet_distribution
EXCEPT
SELECT count(*)
FROM external_schema.factoutletdistribution;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the completeness of a table lnd_fact_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*), SUM(cast(presentamount AS NUMERIC(25, 11))), SUM(cast(price AS NUMERIC(25, 11))), AVG(cast(presentqty  AS NUMERIC(25, 11)))
FROM external_schema.factoutletdistribution
EXCEPT
SELECT COUNT(*), SUM(cast(present_amount AS NUMERIC(25, 11))), SUM(cast(price AS NUMERIC(25, 11))), AVG(cast(present_qty  AS NUMERIC(25, 11)))
FROM lnd.lnd_fact_outlet_distribution;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_card_h&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-188254443">lnd_fact_outlet_card_h</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_card_h&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="698637485">table_schema	table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	udt_name
lnd	lnd_fact_outlet_card_h	ol_card_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	date_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	merch_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	ol_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	success	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	ol_card_date	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	begin_minute_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	end_minute_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	minutes_spent	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	begin_time	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	end_time	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	part_id	null	YES	character varying	256	varchar
lnd	lnd_fact_outlet_card_h	insert_dt	null	YES	timestamp without time zone	null	timestamp
lnd	lnd_fact_outlet_card_h	update_dt	null	YES	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd.lnd_fact_outlet_card_h and external_schema.factoutletcardh" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM lnd.lnd_fact_outlet_card_h
EXCEPT
SELECT count(*)
FROM external_schema.factoutletcardh;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_fact_outlet_card_h and external_schema.factoutletcardh" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT 
	ol_card_id
	, date_id
	, merch_id
	, ol_id
	, success
	, ol_card_date
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, begin_time
	, end_time
	, part_id
--, insert_dt,update_dt
FROM lnd.lnd_fact_outlet_card_h
EXCEPT
SELECT 
	olcard_id
	, date_id
	, merch_id
	, ol_id
	, success
	, olcarddate
	, beginminuteid
	, endminuteid
	, minutesspent
	, begintime
	, endtime
	, part_id
FROM external_schema.factoutletcardh
)
UNION ALL
(
SELECT 
	olcard_id
	, date_id
	, merch_id
	, ol_id
	, success
	, olcarddate
	, beginminuteid
	, endminuteid
	, minutesspent
	, begintime
	, endtime
	, part_id
FROM external_schema.factoutletcardh
EXCEPT
SELECT 
	ol_card_id
	, date_id
	, merch_id
	, ol_id
	, success
	, ol_card_date
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, begin_time
	, end_time
	, part_id
--, insert_dt,update_dt
FROM lnd.lnd_fact_outlet_card_h
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_merchandisers&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1669820944">lnd_dim_merchandisers</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_merchandisers&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="740160996">table_schema	table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	udt_name
lnd	lnd_dim_merchandisers	merch_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	merch_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	merch_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	supervisor_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	supervisor_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	supervisor_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	cust_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	cust_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	cust_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	distr_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	distr_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	distr_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	city_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	city_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	district_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	district_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	region_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	region_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	country_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	country_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	division_manager_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	division_manager_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	region_manager_id	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	region_manager_name	null	YES	character varying	256	varchar
lnd	lnd_dim_merchandisers	insert_dt	null	YES	timestamp without time zone	null	timestamp
lnd	lnd_dim_merchandisers	update_dt	null	YES	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd.lnd_dim_merchandisers and external_schema.dimmerchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM lnd.lnd_dim_merchandisers
EXCEPT
SELECT count(*)
FROM external_schema.dimmerchandisers;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_merchandisers and external_schema.dimmerchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT 
	merch_id
	, merch_name
	, merch_name_en
	, supervisor_id
	, supervisor_name
	, supervisor_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, city_id
	, city_name
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, division_manager_id
	, division_manager_name
	, region_manager_id
	, region_manager_name
--,insert_dt,update_dt
FROM lnd.lnd_dim_merchandisers
EXCEPT
SELECT 
	merch_id
	, merch_name
	, merch_name_en
	, supervisor_id
	, supervisor_name
	, supervisor_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, city_id
	, city_name
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, divisionmanager_id
	, divisionmanager_name
	, regionmanager_id
	, regionmanager_name
FROM external_schema.dimmerchandisers
)
UNION ALL
(
SELECT 
	merch_id
	, merch_name
	, merch_name_en
	, supervisor_id
	, supervisor_name
	, supervisor_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, city_id
	, city_name
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, divisionmanager_id
	, divisionmanager_name
	, regionmanager_id
	, regionmanager_name
FROM external_schema.dimmerchandisers
EXCEPT
SELECT 
	merch_id
	, merch_name
	, merch_name_en
	, supervisor_id
	, supervisor_name
	, supervisor_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, city_id
	, city_name
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, division_manager_id
	, division_manager_name
	, region_manager_id
	, region_manager_name
--,insert_dt,update_dt
FROM lnd.lnd_dim_merchandisers
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_outlets&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1020232782">lnd_dim_outlets</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_outlets&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1609624729">table_schema	table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	udt_name
lnd	lnd_dim_outlets	ol_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_subtype_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_subtype_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_subtype_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_type_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_type_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_type_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_group_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_group_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	ol_group_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	area_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	area_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	area_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	city_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	city_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	city_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	district_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	district_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	district_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	region_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	region_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	region_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	cust_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	cust_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	cust_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	distr_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	distr_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	distr_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	network_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	network_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	network_name_en	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	country_id	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	country_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	status	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	status_name	null	YES	character varying	256	varchar
lnd	lnd_dim_outlets	insert_dt	null	YES	timestamp without time zone	null	timestamp
lnd	lnd_dim_outlets	update_dt	null	YES	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables lnd.lnd_dim_outlets and external_schema.dimoutlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM lnd.lnd_dim_outlets
EXCEPT
SELECT count(*)
FROM external_schema.dimoutlets;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_outlets and external_schema.dimoutlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT 
	ol_id
	, ol_name
	, ol_name_en
	, ol_subtype_id
	, ol_subtype_name
	, ol_subtype_name_en
	, ol_type_id
	, ol_type_name
	, ol_type_name_en
	, ol_group_id
	, ol_group_name
	, ol_group_name_en
	, area_id
	, area_name
	, area_name_en
	, city_id
	, city_name
	, city_name_en
	, district_id
	, district_name
	, district_name_en
	, region_id
	, region_name
	, region_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, network_id
	, network_name
	, network_name_en
	, country_id
	, country_name
	, status
	, status_name
--, insert_dt,update_dt
FROM lnd.lnd_dim_outlets
EXCEPT
SELECT 
	ol_id
	, ol_name
	, ol_name_en
	, olsubtype_id
	, olsubtype_name
	, olsubtype_name_en
	, oltype_id
	, oltype_name
	, oltype_name_en
	, olgroup_id
	, olgroup_name
	, olgroup_name_en
	, area_id
	, area_name
	, area_name_en
	, city_id
	, city_name
	, city_name_en
	, district_id
	, district_name
	, district_name_en
	, region_id
	, region_name
	, region_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, network_id
	, network_name
	, network_name_en
	, country_id
	, country_name
	, status
	, statusname
FROM external_schema.dimoutlets
)
UNION ALL
(
SELECT 
	ol_id
	, ol_name
	, ol_name_en
	, olsubtype_id
	, olsubtype_name
	, olsubtype_name_en
	, oltype_id
	, oltype_name
	, oltype_name_en
	, olgroup_id
	, olgroup_name
	, olgroup_name_en
	, area_id
	, area_name
	, area_name_en
	, city_id
	, city_name
	, city_name_en
	, district_id
	, district_name
	, district_name_en
	, region_id
	, region_name
	, region_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, network_id
	, network_name
	, network_name_en
	, country_id
	, country_name
	, status
	, statusname
FROM external_schema.dimoutlets
EXCEPT
SELECT 
	ol_id
	, ol_name
	, ol_name_en
	, ol_subtype_id
	, ol_subtype_name
	, ol_subtype_name_en
	, ol_type_id
	, ol_type_name
	, ol_type_name_en
	, ol_group_id
	, ol_group_name
	, ol_group_name_en
	, area_id
	, area_name
	, area_name_en
	, city_id
	, city_name
	, city_name_en
	, district_id
	, district_name
	, district_name_en
	, region_id
	, region_name
	, region_name_en
	, cust_id
	, cust_name
	, cust_name_en
	, distr_id
	, distr_name
	, distr_name_en
	, network_id
	, network_name
	, network_name_en
	, country_id
	, country_name
	, status
	, status_name
--, insert_dt,update_dt
FROM lnd.lnd_dim_outlets
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_product&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">product</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-223457637">lnd_dim_product</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">product_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_product&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1245035901">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_dim_product	product_id	YES	character varying	256
lnd_dim_product	product_name	YES	character varying	256
lnd_dim_product	product_name_en	YES	character varying	256
lnd_dim_product	product_code	YES	character varying	256
lnd_dim_product	product_type_id	YES	character varying	256
lnd_dim_product	prod_type_name	YES	character varying	256
lnd_dim_product	product_type_name_en	YES	character varying	256
lnd_dim_product	prod_group_id	YES	character varying	256
lnd_dim_product	prod_group_name	YES	character varying	256
lnd_dim_product	prod_group_name_en	YES	character varying	256
lnd_dim_product	prod_category_id	YES	character varying	256
lnd_dim_product	prod_category_name	YES	character varying	256
lnd_dim_product	prod_category_name_en	YES	character varying	256
lnd_dim_product	insert_dt	YES	timestamp without time zone	null
lnd_dim_product	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_product and external_schema.dimproduct" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT product_id
	, productname
	, product_name_en
	, productcode
	, producttype_id
	, prodtypename
	, producttype_name_en
	, prodgroup_id
	, prodgroupname
	, prodcategory_id
	, prodcategoryname 
FROM external_schema.dimproduct
EXCEPT
SELECT product_id
	, product_name
	, product_name_en
	, product_code
	, product_type_id
	, prod_type_name
	, product_type_name_en
	, prod_group_id
	, prod_group_name
	, prod_category_id
	, prod_category_name
FROM lnd.lnd_dim_product)
UNION ALL
(SELECT product_id
	, product_name
	, product_name_en
	, product_code
	, product_type_id
	, prod_type_name
	, product_type_name_en
	, prod_group_id
	, prod_group_name
	, prod_category_id
	, prod_category_name
FROM lnd.lnd_dim_product
EXCEPT 
SELECT product_id
	, productname
	, product_name_en
	, productcode
	, producttype_id
	, prodtypename
	, producttype_name_en
	, prodgroup_id
	, prodgroupname
	, prodcategory_id
	, prodcategoryname 
FROM external_schema.dimproduct);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_id
	, product_name
	, product_name_en
	, product_code
	, product_type_id
	, prod_type_name
	, product_type_name_en
	, prod_group_id
	, prod_group_name
	, prod_category_id
	, prod_category_name
	, COUNT(*)
FROM lnd.lnd_dim_product
GROUP BY product_id
	, product_name
	, product_name_en
	, product_code
	, product_type_id
	, prod_type_name
	, product_type_name_en
	, prod_group_id
	, prod_group_name
	, prod_category_id
	, prod_category_name
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_warehouses&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">warehouse</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="919219428">lnd_dim_warehouses</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">warehouse_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_dim_warehouses&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1381723132">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_dim_warehouses	w_id	YES	character varying	256
lnd_dim_warehouses	w_long_name	YES	character varying	256
lnd_dim_warehouses	cust_id	YES	character varying	256
lnd_dim_warehouses	cust_name	YES	character varying	256
lnd_dim_warehouses	distr_id	YES	character varying	256
lnd_dim_warehouses	distr_name	YES	character varying	256
lnd_dim_warehouses	city_id	YES	character varying	256
lnd_dim_warehouses	city_name	YES	character varying	256
lnd_dim_warehouses	district_id	YES	character varying	256
lnd_dim_warehouses	district_name	YES	character varying	256
lnd_dim_warehouses	region_id	YES	character varying	256
lnd_dim_warehouses	region_name	YES	character varying	256
lnd_dim_warehouses	country_id	YES	character varying	256
lnd_dim_warehouses	country_name	YES	character varying	256
lnd_dim_warehouses	w_type_id	YES	character varying	256
lnd_dim_warehouses	w_type_long_name	YES	character varying	256
lnd_dim_warehouses	insert_dt	YES	timestamp without time zone	null
lnd_dim_warehouses	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_dim_warehouses and external_schema.dimwarehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT w_id
	, w_long_name
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, w_type_id
	, w_type_long_name
FROM lnd.lnd_dim_warehouses
EXCEPT 
SELECT w_id
	, w_longname
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, wtype_id
	, wtype_longname
FROM external_schema.dimwarehouses)
UNION all
(SELECT w_id
	, w_longname
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, wtype_id
	, wtype_longname
FROM external_schema.dimwarehouses
EXCEPT 
SELECT w_id
	, w_long_name
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, w_type_id
	, w_type_long_name
FROM lnd.lnd_dim_warehouses);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_id
	, w_long_name
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, w_type_id
	, w_type_long_name
	, COUNT(*)
FROM lnd.lnd_dim_warehouses
GROUP BY w_id
	, w_long_name
	, cust_id
	, cust_name
	, distr_id
	, distr_name
	, city_id 
	, city_name 
	, district_id
	, district_name
	, region_id
	, region_name
	, country_id
	, country_name
	, w_type_id
	, w_type_long_name
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_outlet_order_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_order_h&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="993003291">lnd_fact_outlet_order_h</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_outlet_order_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_order_h&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1473626010">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_outlet_order_h	date_id	YES	character varying	256
lnd_fact_outlet_order_h	merch_id	YES	character varying	256
lnd_fact_outlet_order_h	ol_id	YES	character varying	256
lnd_fact_outlet_order_h	order_no	YES	character varying	256
lnd_fact_outlet_order_h	w_id	YES	character varying	256
lnd_fact_outlet_order_h	begin_minute_id	YES	character varying	256
lnd_fact_outlet_order_h	end_minute_id	YES	character varying	256
lnd_fact_outlet_order_h	minutes_spent	YES	character varying	256
lnd_fact_outlet_order_h	part_id	YES	character varying	256
lnd_fact_outlet_order_h	insert_dt	YES	timestamp without time zone	null
lnd_fact_outlet_order_h	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_fact_outlet_order_h and external_schema.factoutletorderh" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT date_id
,merch_id
,ol_id
,order_no
,w_id
,begin_minute_id
,end_minute_id
,minutes_spent
,part_id
FROM lnd.lnd_fact_outlet_order_h
EXCEPT
SELECT date_id
,merch_id
,ol_id
,orderno
,w_id
,beginminuteid
,endminuteid
,minutesspent
,part_id
FROM 
external_schema.factoutletorderh)
UNION ALL
(SELECT date_id
,merch_id
,ol_id
,orderno
,w_id
,beginminuteid
,endminuteid
,minutesspent
,part_id
FROM 
external_schema.factoutletorderh
EXCEPT
SELECT date_id
,merch_id
,ol_id
,order_no
,w_id
,begin_minute_id
,end_minute_id
,minutes_spent
,part_id
FROM lnd.lnd_fact_outlet_order_h);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_outlet_order_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT date_id
,merch_id
,ol_id
,order_no
,w_id
,begin_minute_id
,end_minute_id
,minutes_spent
,part_id
FROM lnd.lnd_fact_outlet_order_h
EXCEPT
SELECT date_id
,merch_id
,ol_id
,orderno
,w_id
,beginminuteid
,endminuteid
,minutesspent
,part_id
FROM 
external_schema.factoutletorderh)
UNION ALL
(SELECT date_id
,merch_id
,ol_id
,orderno
,w_id
,beginminuteid
,endminuteid
,minutesspent
,part_id
FROM 
external_schema.factoutletorderh
EXCEPT
SELECT date_id
,merch_id
,ol_id
,order_no
,w_id
,begin_minute_id
,end_minute_id
,minutes_spent
,part_id
FROM lnd.lnd_fact_outlet_order_h);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table lnd_fact_outlet_order_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_order_d&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="993003287">lnd_fact_outlet_order_d</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table lnd_fact_outlet_order_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;lnd&apos;
AND table_name = &apos;lnd_fact_outlet_order_d&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-828567612">table_name	column_name	is_nullable	data_type	character_maximum_length
lnd_fact_outlet_order_d	ol_card_id	YES	character varying	256
lnd_fact_outlet_order_d	date_id	YES	character varying	256
lnd_fact_outlet_order_d	merch_id	YES	character varying	256
lnd_fact_outlet_order_d	ol_id	YES	character varying	256
lnd_fact_outlet_order_d	order_no	YES	character varying	256
lnd_fact_outlet_order_d	product_id	YES	character varying	256
lnd_fact_outlet_order_d	product_qty	YES	character varying	256
lnd_fact_outlet_order_d	weight_kg	YES	character varying	256
lnd_fact_outlet_order_d	price	YES	character varying	256
lnd_fact_outlet_order_d	vat	YES	character varying	256
lnd_fact_outlet_order_d	amount	YES	character varying	256
lnd_fact_outlet_order_d	w_id	YES	character varying	256
lnd_fact_outlet_order_d	begin_minute_id	YES	character varying	256
lnd_fact_outlet_order_d	end_minute_id	YES	character varying	256
lnd_fact_outlet_order_d	minutes_spent	YES	character varying	256
lnd_fact_outlet_order_d	part_id	YES	character varying	256
lnd_fact_outlet_order_d	insert_dt	YES	timestamp without time zone	null
lnd_fact_outlet_order_d	update_dt	YES	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables lnd.lnd_fact_outlet_order_d and external_schema.factoutletorderd" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT 
		 ol_card_id
		,date_id
		,merch_id
		,ol_id
		,order_no
		,product_id
		,product_qty
		,weight_kg
		,price
		,vat
		,amount
		,w_id
		,begin_minute_id
		,end_minute_id
		,minutes_spent
		,part_id
FROM lnd.lnd_fact_outlet_order_d 
EXCEPT
SELECT 
		 olcard_id
		,date_id
		,merch_id
		,ol_id
		,orderno
		,product_Id
		,product_qty
		,weightkg
		,price
		,vat
		,amount
		,w_id
		,beginminuteid
		,endminuteid
		,minutesspent
		,part_id
FROM 
external_schema.factoutletorderd)
UNION ALL
(SELECT 
		 olcard_id
		,date_id
		,merch_id
		,ol_id
		,orderno
		,product_Id
		,product_qty
		,weightkg
		,price
		,vat
		,amount
		,w_id
		,beginminuteid
		,endminuteid
		,minutesspent
		,part_id
FROM 
external_schema.factoutletorderd
EXCEPT
SELECT 
		 ol_card_id
		,date_id
		,merch_id
		,ol_id
		,order_no
		,product_id
		,product_qty
		,weight_kg
		,price
		,vat
		,amount
		,w_id
		,begin_minute_id
		,end_minute_id
		,minutes_spent
		,part_id
FROM lnd.lnd_fact_outlet_order_d);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table lnd_fact_outlet_order_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  ol_card_id
		,date_id
		,merch_id
		,ol_id
		,order_no
		,product_id
		,product_qty
		,weight_kg
		,price
		,vat
		,amount
		,w_id
		,begin_minute_id
		,end_minute_id
		,minutes_spent
		,part_id
		,COUNT(*)
FROM lnd.lnd_fact_outlet_order_d 
GROUP BY ol_card_id
		,date_id
		,merch_id
		,ol_id
		,order_no
		,product_id
		,product_qty
		,weight_kg
		,price
		,vat
		,amount
		,w_id
		,begin_minute_id
		,end_minute_id
		,minutes_spent
		,part_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Testing 3NF_LAYER_previus" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Controller for execution all tests for two environments" enabled="true">
          <stringProp name="ForeachController.inputVal">pool</stringProp>
          <stringProp name="ForeachController.returnVal">pool_1</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlets&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1107700521">ce_outlets</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_subtypes" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_subtypes&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="159303758">ce_outlet_subtypes</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_types&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1668427132">ce_outlet_types</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_groups&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-560291543">ce_outlet_groups</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_merchandisers&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-518748121">ce_merchandisers</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_supervisors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_supervisors&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="223805870">ce_supervisors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_region_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_region_managers&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1590747508">ce_region_managers</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_division_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_division_managers&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1603683557">ce_division_managers</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlets&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="368067271">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlets	ol_id	NO	integer	null	int4
bl_3nf	ce_outlets	ol_name	NO	character varying	70	varchar
bl_3nf	ce_outlets	ol_name_en	NO	character varying	70	varchar
bl_3nf	ce_outlets	ol_subtype_id	NO	integer	null	int4
bl_3nf	ce_outlets	area_id	NO	integer	null	int4
bl_3nf	ce_outlets	cust_id	NO	integer	null	int4
bl_3nf	ce_outlets	network_id	NO	integer	null	int4
bl_3nf	ce_outlets	status_id	NO	integer	null	int4
bl_3nf	ce_outlets	src_ol_id	NO	character varying	50	varchar
bl_3nf	ce_outlets	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlets	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlets	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_subtypes" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_subtypes&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-967024907">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_subtypes	ol_subtype_id	NO	integer	null	int4
bl_3nf	ce_outlet_subtypes	ol_subtype_name	NO	character varying	30	varchar
bl_3nf	ce_outlet_subtypes	ol_subtype_name_en	NO	character varying	30	varchar
bl_3nf	ce_outlet_subtypes	ol_type_id	NO	integer	null	int4
bl_3nf	ce_outlet_subtypes	src_ol_subtype_id	NO	character varying	50	varchar
bl_3nf	ce_outlet_subtypes	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_subtypes	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_subtypes	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_types&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-939650692">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_types	ol_type_id	NO	integer	null	int4
bl_3nf	ce_outlet_types	ol_type_name	NO	character varying	20	varchar
bl_3nf	ce_outlet_types	ol_type_name_en	NO	character varying	20	varchar
bl_3nf	ce_outlet_types	ol_group_id	NO	integer	null	int4
bl_3nf	ce_outlet_types	src_ol_type_id	NO	character varying	50	varchar
bl_3nf	ce_outlet_types	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_types	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_types	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_groups&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-777589971">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_groups	ol_group_id	NO	integer	null	int4
bl_3nf	ce_outlet_groups	ol_group_name	NO	character varying	20	varchar
bl_3nf	ce_outlet_groups	ol_group_name_en	NO	character varying	20	varchar
bl_3nf	ce_outlet_groups	src_ol_group_id	NO	character varying	50	varchar
bl_3nf	ce_outlet_groups	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_groups	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_groups	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_merchandisers&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="437155012">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_merchandisers	merch_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	merch_name	NO	character varying	100	varchar
bl_3nf	ce_merchandisers	merch_name_en	NO	character varying	100	varchar
bl_3nf	ce_merchandisers	cust_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	supervisor_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	city_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	region_manager_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	division_manager_id	NO	integer	null	int4
bl_3nf	ce_merchandisers	src_merch_id	NO	character varying	50	varchar
bl_3nf	ce_merchandisers	src_table	NO	character varying	100	varchar
bl_3nf	ce_merchandisers	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_merchandisers	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_supervisors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_supervisors&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-929799996">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_supervisors	supervisor_id	NO	integer	null	int4
bl_3nf	ce_supervisors	supervisor_name	NO	character varying	100	varchar
bl_3nf	ce_supervisors	supervisor_name_en	NO	character varying	100	varchar
bl_3nf	ce_supervisors	src_supervisor_id	NO	character varying	50	varchar
bl_3nf	ce_supervisors	src_table	NO	character varying	100	varchar
bl_3nf	ce_supervisors	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_supervisors	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_region_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_region_managers&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="340722491">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_region_managers	region_manager_id	NO	integer	null	int4
bl_3nf	ce_region_managers	region_manager_name	NO	character varying	20	varchar
bl_3nf	ce_region_managers	src_region_manager_id	NO	character varying	50	varchar
bl_3nf	ce_region_managers	src_table	NO	character varying	100	varchar
bl_3nf	ce_region_managers	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_region_managers	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_division_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	--, column_default
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_division_managers&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="682579775">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_division_managers	division_manager_id	NO	integer	null	int4
bl_3nf	ce_division_managers	division_manager_name	NO	character varying	50	varchar
bl_3nf	ce_division_managers	src_division_manager_id	NO	character varying	50	varchar
bl_3nf	ce_division_managers	src_table	NO	character varying	100	varchar
bl_3nf	ce_division_managers	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_division_managers	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_outlets and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT ol_name, ol_name_en, src_ol_id,
ol_subtype_id, area_id, cust_id, network_id, status_id
FROM bl_3nf.ce_outlets
WHERE ol_id &gt; 0
EXCEPT
SELECT initcap(trim(ol_name)) AS ol_name, initcap(trim(ol_name_en)) AS ol_name_en, ol_id,
cos2.ol_subtype_id, ca.area_id, cc.cust_id, cn.network_id, cos3.status_id
FROM lnd.lnd_dim_outlets ldo
LEFT JOIN bl_3nf.ce_outlet_subtypes cos2 ON
ldo.ol_subtype_id = cos2.src_ol_subtype_id
LEFT JOIN bl_3nf.ce_areas ca ON
ldo.area_id = ca.src_area_id
LEFT JOIN bl_3nf.ce_customers cc ON
ldo.cust_id = cc.src_cust_id
LEFT JOIN bl_3nf.ce_outlet_statuses cos3 ON
ldo.status = cos3.src_status
LEFT JOIN bl_3nf.ce_networks cn ON
ldo.network_id = cn.src_network_id
GROUP BY ol_name, ol_name_en, ol_id,
cos2.ol_subtype_id, ca.area_id, cc.cust_id, cn.network_id, cos3.status_id 
)
UNION ALL 
(
SELECT initcap(trim(ol_name)) AS ol_name, initcap(trim(ol_name_en)) AS ol_name_en, ol_id,
cos2.ol_subtype_id, ca.area_id, cc.cust_id, cn.network_id, cos3.status_id
FROM lnd.lnd_dim_outlets ldo
LEFT JOIN bl_3nf.ce_outlet_subtypes cos2 ON
ldo.ol_subtype_id = cos2.src_ol_subtype_id
LEFT JOIN bl_3nf.ce_areas ca ON
ldo.area_id = ca.src_area_id
LEFT JOIN bl_3nf.ce_customers cc ON
ldo.cust_id = cc.src_cust_id
LEFT JOIN bl_3nf.ce_outlet_statuses cos3 ON
ldo.status = cos3.src_status
LEFT JOIN bl_3nf.ce_networks cn ON
ldo.network_id = cn.src_network_id
GROUP BY ol_name, ol_name_en, ol_id,
cos2.ol_subtype_id, ca.area_id, cc.cust_id, cn.network_id, cos3.status_id
EXCEPT 
SELECT ol_name, ol_name_en, src_ol_id,
ol_subtype_id, area_id, cust_id, network_id, status_id
FROM bl_3nf.ce_outlets
WHERE ol_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_name, ol_name_en, src_ol_id,
ol_subtype_id, area_id, cust_id, network_id, status_id
FROM bl_3nf.ce_outlets
GROUP BY ol_name, ol_name_en, src_ol_id,
ol_subtype_id, area_id, cust_id, network_id, status_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_outlets and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_outlets
WHERE ol_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(ol_name) , count(ol_name_en), count(ol_id)
FROM lnd.lnd_dim_outlets
GROUP BY ol_name, ol_name_en, ol_id
) ol_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_division_managers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT division_manager_name, src_division_manager_id
FROM bl_3nf.ce_division_managers
WHERE division_manager_id &gt; 0
EXCEPT
SELECT initcap(division_manager_name), division_manager_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY division_manager_id, division_manager_name
)
UNION ALL 
(
SELECT initcap(division_manager_name), division_manager_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY division_manager_id, division_manager_name
EXCEPT 
SELECT division_manager_name, src_division_manager_id
FROM bl_3nf.ce_division_managers
WHERE division_manager_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_division_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT division_manager_name, src_division_manager_id
FROM bl_3nf.ce_division_managers
GROUP BY division_manager_name, src_division_manager_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tablesbl_3nf.ce_division_managers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_division_managers
WHERE division_manager_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(division_manager_id) , count(division_manager_name)
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY division_manager_id, division_manager_name
) div_men_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_region_managers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT region_manager_name, src_region_manager_id
FROM bl_3nf.ce_region_managers
WHERE region_manager_id &gt; 0
EXCEPT
SELECT initcap(region_manager_name), region_manager_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY region_manager_id, region_manager_name
)
UNION ALL 
(
SELECT initcap(region_manager_name), region_manager_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY region_manager_id, region_manager_name
EXCEPT 
SELECT region_manager_name, src_region_manager_id
FROM bl_3nf.ce_region_managers
WHERE region_manager_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_region_managers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT region_manager_name, src_region_manager_id
FROM bl_3nf.ce_region_managers
GROUP BY region_manager_name, src_region_manager_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_region_managers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_region_managers
WHERE region_manager_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(region_manager_id) , count(region_manager_name)
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY region_manager_id, region_manager_name
) reg_men_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_supervisors and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT supervisor_name, supervisor_name_en, src_supervisor_id
FROM bl_3nf.ce_supervisors
WHERE supervisor_id &gt; 0
EXCEPT
SELECT initcap(trim(supervisor_name)), initcap(trim(supervisor_name_en)), supervisor_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY supervisor_name, supervisor_name_en, supervisor_id
)
UNION ALL 
(
SELECT initcap(trim(supervisor_name)), initcap(trim(supervisor_name_en)), supervisor_id
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY supervisor_name, supervisor_name_en, supervisor_id
EXCEPT 
SELECT supervisor_name, supervisor_name_en, src_supervisor_id
FROM bl_3nf.ce_supervisors
WHERE supervisor_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_supervisors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT supervisor_name, supervisor_name_en, src_supervisor_id
FROM bl_3nf.ce_supervisors
GROUP BY supervisor_name, supervisor_name_en, src_supervisor_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_supervisors andlnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_supervisors
WHERE supervisor_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(supervisor_id) , count(supervisor_name) , count(supervisor_name_en)
FROM lnd.lnd_dim_merchandisers ldm
GROUP BY supervisor_id, supervisor_name, supervisor_name_en
) supvis_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_merchandisers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT merch_name, merch_name_en, src_merch_id, cust_id, supervisor_id, city_id,
region_manager_id, division_manager_id
FROM bl_3nf.ce_merchandisers
WHERE merch_id &gt; 0
EXCEPT
SELECT initcap(trim(merch_name)), initcap(trim(merch_name_en)), merch_id,
cc.cust_id, cs.supervisor_id, cc2.city_id, crm.region_manager_id, cdm.division_manager_id
FROM lnd.lnd_dim_merchandisers ldm
LEFT JOIN bl_3nf.ce_customers cc ON
ldm.cust_id = cc.src_cust_id
LEFT JOIN bl_3nf.ce_supervisors cs ON
ldm.supervisor_id = cs.src_supervisor_id
LEFT JOIN bl_3nf.ce_cities cc2 ON
ldm.city_id = cc2.src_city_id
LEFT JOIN bl_3nf.ce_region_managers crm ON
ldm.region_manager_id = crm.src_region_manager_id
LEFT JOIN bl_3nf.ce_division_managers cdm ON
ldm.division_manager_id = cdm.src_division_manager_id
GROUP BY merch_name, merch_name_en, merch_id,
cc.cust_id, cs.supervisor_id, cc2.city_id, crm.region_manager_id, cdm.division_manager_id
)
UNION ALL 
(
SELECT initcap(trim(merch_name)), initcap(trim(merch_name_en)), merch_id,
cc.cust_id, cs.supervisor_id, cc2.city_id, crm.region_manager_id, cdm.division_manager_id
FROM lnd.lnd_dim_merchandisers ldm
LEFT JOIN bl_3nf.ce_customers cc ON
ldm.cust_id = cc.src_cust_id
LEFT JOIN bl_3nf.ce_supervisors cs ON
ldm.supervisor_id = cs.src_supervisor_id
LEFT JOIN bl_3nf.ce_cities cc2 ON
ldm.city_id = cc2.src_city_id
LEFT JOIN bl_3nf.ce_region_managers crm ON
ldm.region_manager_id = crm.src_region_manager_id
LEFT JOIN bl_3nf.ce_division_managers cdm ON
ldm.division_manager_id = cdm.src_division_manager_id
GROUP BY merch_name, merch_name_en, merch_id,
cc.cust_id, cs.supervisor_id, cc2.city_id, crm.region_manager_id, cdm.division_manager_id
EXCEPT 
SELECT merch_name, merch_name_en, src_merch_id, cust_id, supervisor_id, city_id,
region_manager_id, division_manager_id
FROM bl_3nf.ce_merchandisers
WHERE merch_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT merch_name, merch_name_en, src_merch_id, cust_id, supervisor_id, city_id,
region_manager_id, division_manager_id
FROM bl_3nf.ce_merchandisers
GROUP BY merch_name, merch_name_en, src_merch_id, cust_id, supervisor_id, city_id,
region_manager_id, division_manager_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_merchandisers and lnd.lnd_dim_merchandisers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_merchandisers
WHERE merch_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(merch_name) , count(merch_name_en), count(merch_id)
FROM lnd.lnd_dim_merchandisers
GROUP BY merch_name, merch_name_en, merch_id
) merch_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_outlet_subtypes and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT ol_subtype_name, ol_subtype_name_en, src_ol_subtype_id, ol_type_id
FROM bl_3nf.ce_outlet_subtypes
WHERE ol_subtype_id &gt; 0
EXCEPT
SELECT initcap(trim(ol_subtype_name)), initcap(trim(ol_subtype_name_en)), ol_subtype_id, cot2.ol_type_id
FROM lnd.lnd_dim_outlets ldo
LEFT JOIN bl_3nf.ce_outlet_types cot2 ON
ldo.ol_type_id = cot2.src_ol_type_id
GROUP BY ol_subtype_name, ol_subtype_name_en, ol_subtype_id, cot2.ol_type_id
)
UNION ALL 
(
SELECT initcap(trim(ol_subtype_name)), initcap(trim(ol_subtype_name_en)), ol_subtype_id, cot2.ol_type_id
FROM lnd.lnd_dim_outlets ldo
LEFT JOIN bl_3nf.ce_outlet_types cot2 ON
ldo.ol_type_id = cot2.src_ol_type_id
GROUP BY ol_subtype_name, ol_subtype_name_en, ol_subtype_id, cot2.ol_type_id
EXCEPT 
SELECT ol_subtype_name, ol_subtype_name_en, src_ol_subtype_id, ol_type_id
FROM bl_3nf.ce_outlet_subtypes
WHERE ol_subtype_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_outlet_subtypes" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_subtype_name, ol_subtype_name_en, src_ol_subtype_id, ol_type_id
FROM bl_3nf.ce_outlet_subtypes
GROUP BY ol_subtype_name, ol_subtype_name_en, src_ol_subtype_id, ol_type_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_outlet_subtypes and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_outlet_subtypes
WHERE ol_subtype_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(ol_subtype_name) , count(ol_subtype_name_en), count(ol_subtype_id)
FROM lnd.lnd_dim_outlets
GROUP BY ol_subtype_name, ol_subtype_name_en, ol_subtype_id
) ol_subtype_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_outlet_types and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT ol_type_name, ol_type_name_en, src_ol_type_id
FROM bl_3nf.ce_outlet_types
WHERE ol_type_id &gt; 0
EXCEPT
SELECT initcap(trim(ol_type_name)), initcap(trim(ol_type_name_en)), ol_type_id
FROM lnd.lnd_dim_outlets
GROUP BY ol_type_name, ol_type_name_en, ol_type_id
)
UNION ALL 
(
SELECT initcap(trim(ol_type_name)), initcap(trim(ol_type_name_en)), ol_type_id
FROM lnd.lnd_dim_outlets
GROUP BY ol_type_name, ol_type_name_en, ol_type_id
EXCEPT 
SELECT ol_type_name, ol_type_name_en, src_ol_type_id
FROM bl_3nf.ce_outlet_types
WHERE ol_type_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_outlet_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_type_name, ol_type_name_en, src_ol_type_id
FROM bl_3nf.ce_outlet_types
GROUP BY ol_type_name, ol_type_name_en, src_ol_type_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_outlet_types and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_outlet_types
WHERE ol_type_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(ol_type_name) , count(ol_type_name_en), count(ol_type_id)
FROM lnd.lnd_dim_outlets
GROUP BY ol_type_name, ol_type_name_en, ol_type_id
) ol_type_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_outlet_groups and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT ol_group_name, ol_group_name_en, src_ol_group_id
FROM bl_3nf.ce_outlet_groups
WHERE ol_group_id &gt; 0
EXCEPT
SELECT initcap(trim(ol_group_name)), initcap(trim(ol_group_name_en)), ol_group_id
FROM lnd.lnd_dim_outlets
GROUP BY ol_group_name, ol_group_name_en, ol_group_id
)
UNION ALL 
(
SELECT initcap(trim(ol_group_name)), initcap(trim(ol_group_name_en)), ol_group_id
FROM lnd.lnd_dim_outlets
GROUP BY ol_group_name, ol_group_name_en, ol_group_id
EXCEPT 
SELECT ol_group_name, ol_group_name_en, src_ol_group_id
FROM bl_3nf.ce_outlet_groups
WHERE ol_group_id &gt; 0
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in a table bl_3nf.ce_outlet_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_group_name, ol_group_name_en, src_ol_group_id
FROM bl_3nf.ce_outlet_groups
GROUP BY ol_group_name, ol_group_name_en, src_ol_group_id
HAVING count(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables bl_3nf.ce_outlet_groups and lnd.lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT count(*)
FROM bl_3nf.ce_outlet_groups
WHERE ol_group_id &gt; 0
EXCEPT
SELECT count(*)
FROM (
SELECT count(ol_group_name) , count(ol_group_name_en), count(ol_group_id)
FROM lnd.lnd_dim_outlets
GROUP BY ol_group_name, ol_group_name_en, ol_group_id
) ol_group_t;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_doc_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_doc_types&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1917643541">ce_doc_types</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_invoice_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_invoice_statuses&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="518537007">ce_invoice_statuses</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_warehouses&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="462960141">ce_warehouses</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_warehouse_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_warehouse_types&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2084375008">ce_warehouse_types</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_archived_stocks_evening&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48496518">ce_archived_stocks_evening</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_archived_stocks_morning&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1629806910">ce_archived_stocks_morning</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_purchase_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchase_invoices&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1493253689">ce_purchase_invoices</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking existence of a table ce_sales_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales_invoices&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1148340790">ce_sales_invoices</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of the table ce_doc_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_doc_types&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1071556431">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_doc_types	doc_type_id	NO	integer	null
ce_doc_types	doc_type_name	NO	character varying	20
ce_doc_types	src_doc_type	NO	character varying	50
ce_doc_types	src_table	NO	character varying	100
ce_doc_types	insert_dt	NO	timestamp without time zone	null
ce_doc_types	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_invoice_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_invoice_statuses&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2052351056">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_invoice_statuses	status_id	NO	integer	null
ce_invoice_statuses	status_name	NO	character varying	20
ce_invoice_statuses	src_status	NO	character varying	50
ce_invoice_statuses	src_table	NO	character varying	100
ce_invoice_statuses	insert_dt	NO	timestamp without time zone	null
ce_invoice_statuses	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_warehouses&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1792181918">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_warehouses	w_id	NO	integer	null
ce_warehouses	w_long_name	NO	character varying	70
ce_warehouses	cust_id	NO	integer	null
ce_warehouses	city_id	NO	integer	null
ce_warehouses	w_type_id	NO	integer	null
ce_warehouses	src_w_id	NO	character varying	50
ce_warehouses	src_table	NO	character varying	100
ce_warehouses	insert_dt	NO	timestamp without time zone	null
ce_warehouses	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_warehouse_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_warehouse_types&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="119987657">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_warehouse_types	w_type_id	NO	integer	null
ce_warehouse_types	w_type_long_name	NO	character varying	20
ce_warehouse_types	src_w_type_id	NO	character varying	50
ce_warehouse_types	src_table	NO	character varying	100
ce_warehouse_types	insert_dt	NO	timestamp without time zone	null
ce_warehouse_types	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    		is_nullable,
		data_type,
		character_maximum_length,
		numeric_precision,
		numeric_scale
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_archived_stocks_evening&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2146257642">table_name	column_name	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_archived_stocks_evening	stocks_evening_id	NO	integer	null	32	0
ce_archived_stocks_evening	w_id	NO	integer	null	32	0
ce_archived_stocks_evening	date_id	NO	date	null	null	null
ce_archived_stocks_evening	product_id	NO	integer	null	32	0
ce_archived_stocks_evening	stock	NO	numeric	null	10	3
ce_archived_stocks_evening	stock_in_packages	NO	numeric	null	23	17
ce_archived_stocks_evening	src_table	NO	character varying	100	null	null
ce_archived_stocks_evening	insert_dt	NO	timestamp without time zone	null	null	null
ce_archived_stocks_evening	update_dt	NO	timestamp without time zone	null	null	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    		is_nullable,
		data_type,
		character_maximum_length,
		numeric_precision,
		numeric_scale
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_archived_stocks_morning&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="40488810">table_name	column_name	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_archived_stocks_morning	stocks_morning_id	NO	integer	null	32	0
ce_archived_stocks_morning	w_id	NO	integer	null	32	0
ce_archived_stocks_morning	date_id	NO	date	null	null	null
ce_archived_stocks_morning	product_id	NO	integer	null	32	0
ce_archived_stocks_morning	stock	NO	numeric	null	10	3
ce_archived_stocks_morning	stock_in_packages	NO	numeric	null	23	17
ce_archived_stocks_morning	src_table	NO	character varying	100	null	null
ce_archived_stocks_morning	insert_dt	NO	timestamp without time zone	null	null	null
ce_archived_stocks_morning	update_dt	NO	timestamp without time zone	null	null	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_purchase_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchase_invoices&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-378787961">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_purchase_invoices	purchase_invoice_id	NO	integer	null
ce_purchase_invoices	invoice_no	NO	character varying	30
ce_purchase_invoices	date_id	NO	date	null
ce_purchase_invoices	cust_id	NO	integer	null
ce_purchase_invoices	doc_type_id	NO	integer	null
ce_purchase_invoices	src_purchase_invoice_id	NO	character varying	50
ce_purchase_invoices	src_table	NO	character varying	100
ce_purchase_invoices	insert_dt	NO	timestamp without time zone	null
ce_purchase_invoices	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking metadata of a table ce_sales_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT  table_name, 
    		column_name, 
    	   	is_nullable,
		data_type,
		character_maximum_length
FROM information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales_invoices&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-916022331">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_sales_invoices	invoice_id	NO	integer	null
ce_sales_invoices	invoice_no	NO	character varying	25
ce_sales_invoices	merch_id	NO	integer	null
ce_sales_invoices	ol_order_id	NO	integer	null
ce_sales_invoices	ol_id	NO	integer	null
ce_sales_invoices	date_id	NO	date	null
ce_sales_invoices	status_id	NO	integer	null
ce_sales_invoices	cust_id	NO	integer	null
ce_sales_invoices	doc_type_id	NO	integer	null
ce_sales_invoices	direct_sales_label	NO	boolean	null
ce_sales_invoices	src_invoice_id	NO	character varying	50
ce_sales_invoices	src_table	NO	character varying	100
ce_sales_invoices	insert_dt	NO	timestamp without time zone	null
ce_sales_invoices	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_doc_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_doc_types&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2048617310">conname	condef
pk_ce_doc_types	PRIMARY KEY (doc_type_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_invoice_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_invoice_statuses&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="726641591">conname	condef
pk_ce_invoice_statuses	PRIMARY KEY (status_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_warehouses&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="361102844">conname	condef
fk_ce_warehouses_city_id	FOREIGN KEY (city_id) REFERENCES bl_3nf.ce_cities(city_id)
fk_ce_warehouses_cust_id	FOREIGN KEY (cust_id) REFERENCES bl_3nf.ce_customers(cust_id)
fk_ce_warehouses_w_type_id	FOREIGN KEY (w_type_id) REFERENCES bl_3nf.ce_warehouse_types(w_type_id)
pk_ce_warehouses	PRIMARY KEY (w_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_warehouse_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_warehouse_types&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1238673974">conname	condef
pk_ce_warehouse_types	PRIMARY KEY (w_type_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_archived_stocks_evening&apos;::regclass;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1296709260">conname	condef
ce_archived_stocks_evening_pkey	PRIMARY KEY (stocks_evening_id)
fk_ce_archived_stocks_evening_product_id	FOREIGN KEY (product_id) REFERENCES bl_3nf.ce_products(product_id)
fk_ce_archived_stocks_evening_w_id	FOREIGN KEY (w_id) REFERENCES bl_3nf.ce_warehouses(w_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_archived_stocks_morning&apos;::regclass;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1539709670">conname	condef
pk_ce_archived_stocks_morning	PRIMARY KEY (stocks_morning_id)
fk_ce_archived_stocks_morning_product_id	FOREIGN KEY (product_id) REFERENCES bl_3nf.ce_products(product_id)
fk_ce_archived_stocks_morning_w_id	FOREIGN KEY (w_id) REFERENCES bl_3nf.ce_warehouses(w_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_purchase_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_purchase_invoices&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842100729">conname	condef
fk_ce_purchase_invoices_cust_id	FOREIGN KEY (cust_id) REFERENCES bl_3nf.ce_customers(cust_id)
fk_ce_purchase_invoices_doc_type_id	FOREIGN KEY (doc_type_id) REFERENCES bl_3nf.ce_doc_types(doc_type_id)
pk_ce_purchase_invoices	PRIMARY KEY (purchase_invoice_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_sales_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_sales_invoices&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="283848971">conname	condef
fk_ce_sales_invoices_cust_id	FOREIGN KEY (cust_id) REFERENCES bl_3nf.ce_customers(cust_id)
fk_ce_sales_invoices_doc_type_id	FOREIGN KEY (doc_type_id) REFERENCES bl_3nf.ce_doc_types(doc_type_id)
fk_ce_sales_invoices_merch_id	FOREIGN KEY (merch_id) REFERENCES bl_3nf.ce_merchandisers(merch_id)
fk_ce_sales_invoices_ol_id	FOREIGN KEY (ol_id) REFERENCES bl_3nf.ce_outlets(ol_id)
fk_ce_sales_invoices_ol_order_id	FOREIGN KEY (ol_order_id) REFERENCES bl_3nf.ce_outlet_orders(ol_order_id)
fk_ce_sales_invoices_status_id	FOREIGN KEY (status_id) REFERENCES bl_3nf.ce_invoice_statuses(status_id)
pk_ce_sales_invoices	PRIMARY KEY (invoice_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_doc_types and lnd.lnd_dim_invoices+lnd.lnd_dim_invoices_in" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT doc_type_name , src_doc_type
FROM bl_3nf.ce_doc_types
EXCEPT
(SELECT INITCAP(TRIM(doc_type_name)),  INITCAP(TRIM(doc_type)) 
FROM lnd.lnd_dim_invoices
UNION
SELECT INITCAP(TRIM(doc_type_name)),  INITCAP(TRIM(doc_type)) 
FROM lnd.lnd_dim_invoices_in)
)
UNION ALL 
(
(SELECT INITCAP(TRIM(doc_type_name)),  INITCAP(TRIM(doc_type))  
FROM lnd.lnd_dim_invoices
UNION
SELECT INITCAP(TRIM(doc_type_name)),  INITCAP(TRIM(doc_type))  
FROM lnd.lnd_dim_invoices_in)
EXCEPT
SELECT doc_type_name , src_doc_type
FROM bl_3nf.ce_doc_types
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="28155497">doc_type_name	src_doc_type
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_invoice_statuses and lnd.lnd_dim_invoices+lnd.lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT status_name, src_status
FROM bl_3nf.ce_invoice_statuses
EXCEPT
(SELECT TRIM(status_name), TRIM(status)
FROM lnd.lnd_dim_invoices
UNION
SELECT TRIM(status_name), TRIM(status)
FROM lnd.lnd_fact_sal_out_d)
)
UNION ALL 
(
(SELECT TRIM(status_name), TRIM(status)
FROM lnd.lnd_dim_invoices
UNION
SELECT TRIM(status_name), TRIM(status)
FROM lnd.lnd_fact_sal_out_d)
EXCEPT
SELECT status_name, src_status
FROM bl_3nf.ce_invoice_statuses
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1262612811">status_name	src_status
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_warehouses and lnd.lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT w_long_name, cust_id, city_id, w_type_id, src_w_id
FROM bl_3nf.ce_warehouses
EXCEPT
SELECT TRIM(lw.w_long_name)
	, CAST(cw.cust_id AS int)
	, CAST(cc.city_id AS int)
	, wt.w_type_id
	, lw.w_id
FROM lnd.lnd_dim_warehouses lw
JOIN bl_3nf.ce_warehouses  cw
ON lw.w_id = cw.src_w_id
JOIN bl_3nf.ce_cities cc
ON lw.city_id = cc.src_city_id
JOIN bl_3nf.ce_warehouse_types wt
ON cw.w_type_id = wt.w_type_id
)
UNION ALL 
(
SELECT TRIM(lw.w_long_name)
	, CAST(cw.cust_id AS int)
	, CAST(cc.city_id AS int)
	, wt.w_type_id
	, lw.w_id
FROM lnd.lnd_dim_warehouses lw
JOIN bl_3nf.ce_warehouses  cw
ON lw.w_id = cw.src_w_id
JOIN bl_3nf.ce_cities cc
ON lw.city_id = cc.src_city_id
JOIN bl_3nf.ce_warehouse_types wt
ON cw.w_type_id = wt.w_type_id
EXCEPT
SELECT w_long_name, cust_id, city_id, w_type_id, src_w_id
FROM bl_3nf.ce_warehouses
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-226030777">w_long_name	cust_id	city_id	w_type_id	src_w_id
N/A	-9999	-9999	-9999	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_warehouse_types and lnd.lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT w_type_long_name, src_w_type_id 
FROM bl_3nf.ce_warehouse_types
EXCEPT
SELECT INITCAP(TRIM(w_type_long_name)), w_type_id
FROM lnd.lnd_dim_warehouses
)
UNION ALL
(
SELECT INITCAP(TRIM(w_type_long_name)), w_type_id
FROM lnd.lnd_dim_warehouses
EXCEPT
SELECT w_type_long_name, src_w_type_id 
FROM bl_3nf.ce_warehouse_types
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="753702322">w_type_long_name	src_w_type_id
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_archived_stocks_evening and lnd.lnd_fact_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT w_id
	, date_id
	, product_id
	, stock
	--, stock_in_packages
FROM bl_3nf.ce_archived_stocks_evening casm 
EXCEPT
SELECT cw.w_id
	, to_date(lfasm.date_id, &apos;yyyymmdd&apos;)
	, cp.product_id
	, CAST(lfasm.stock AS numeric(10, 3))
	--, CAST(lfasm.stock_in_packages AS numeric(23, 17))
FROM lnd.lnd_fact_archived_stocks_evening lfasm
JOIN bl_3nf.ce_products cp 
ON lfasm.product_id = cp.src_product_id
JOIN bl_3nf.ce_warehouses cw
ON lfasm.w_id = cw.src_w_id
)
UNION ALL 
(
SELECT cw.w_id
	, to_date(lfasm.date_id, &apos;yyyymmdd&apos;)
	, cp.product_id
	, CAST(lfasm.stock AS numeric(10, 3))
	--, CAST(lfasm.stock_in_packages AS numeric(23, 17))
FROM lnd.lnd_fact_archived_stocks_evening lfasm
JOIN bl_3nf.ce_products cp 
ON lfasm.product_id = cp.src_product_id
JOIN bl_3nf.ce_warehouses cw
ON lfasm.w_id = cw.src_w_id
EXCEPT 
SELECT w_id
	, date_id
	, product_id
	, stock
	--, stock_in_packages
FROM bl_3nf.ce_archived_stocks_evening casm
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="283150634">w_id	date_id	product_id	stock	stock_in_packages
-9999	2999-12-31	-9999	-9999.000	-9999.00000000000000000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_archived_stocks_morning and lnd.lnd_fact_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT w_id
	, date_id
	, product_id
	, stock
	, stock_in_packages
FROM bl_3nf.ce_archived_stocks_morning casm 
EXCEPT
SELECT cw.w_id
	, to_date(lfasm.date_id, &apos;yyyymmdd&apos;)
	, cp.product_id
	, CAST(lfasm.stock AS numeric(10, 3))
	, CAST(lfasm.stock_in_packages AS numeric(23, 17))
FROM lnd.lnd_fact_archived_stocks_morning lfasm
JOIN bl_3nf.ce_products cp 
ON lfasm.product_id = cp.src_product_id
JOIN bl_3nf.ce_warehouses cw
ON lfasm.w_id = cw.src_w_id
)
UNION ALL 
(
SELECT cw.w_id
	, to_date(lfasm.date_id, &apos;yyyymmdd&apos;)
	, cp.product_id
	, CAST(lfasm.stock AS numeric(10, 3))
	, CAST(lfasm.stock_in_packages AS numeric(23, 17))
FROM lnd.lnd_fact_archived_stocks_morning lfasm
JOIN bl_3nf.ce_products cp 
ON lfasm.product_id = cp.src_product_id
JOIN bl_3nf.ce_warehouses cw
ON lfasm.w_id = cw.src_w_id
EXCEPT 
SELECT w_id
	, date_id
	, product_id
	, stock
	, stock_in_packages
FROM bl_3nf.ce_archived_stocks_morning casm
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="283150634">w_id	date_id	product_id	stock	stock_in_packages
-9999	2999-12-31	-9999	-9999.000	-9999.00000000000000000</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_purchase_invoices and lnd.lnd_dim_invoices_in + lnd.lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(
SELECT invoice_no
		, date_id
		, cust_id
		--, doc_type_id
		, src_purchase_invoice_id
FROM bl_3nf.ce_purchase_invoices cpi 
EXCEPT
(SELECT TRIM(invoice_no)
		, to_date(date_id, &apos;yyyymmdd&apos;)
		, cc.cust_id 
		--, dt.doc_type_id
		, invoice_id
FROM lnd.lnd_dim_invoices_in di
JOIN bl_3nf.ce_doc_types dt 
ON di.doc_type = dt.src_doc_type
JOIN bl_3nf.ce_customers cc 
ON di.cust_id = cc.src_cust_id 
UNION 
SELECT TRIM(invoice_no)
		, to_date(date_id, &apos;yyyymmdd&apos;)
		, cc.cust_id
		--, -9999 AS doc_type_id
		, invoice_id
FROM lnd.lnd_fact_sal_in_d lfsid
JOIN bl_3nf.ce_customers cc 
ON lfsid.cust_id = cc.src_cust_id)
)
UNION ALL 
(
(SELECT TRIM(invoice_no)
		, to_date(date_id, &apos;yyyymmdd&apos;)
		, cc.cust_id 
		--, dt.doc_type_id
		, invoice_id
FROM lnd.lnd_dim_invoices_in di
JOIN bl_3nf.ce_doc_types dt 
ON di.doc_type = dt.src_doc_type
JOIN bl_3nf.ce_customers cc 
ON di.cust_id = cc.src_cust_id 
UNION 
SELECT TRIM(invoice_no)
		, to_date(date_id, &apos;yyyymmdd&apos;)
		, cc.cust_id
		--, -9999 AS doc_type_id
		, invoice_id
FROM lnd.lnd_fact_sal_in_d lfsid
JOIN bl_3nf.ce_customers cc 
ON lfsid.cust_id = cc.src_cust_id)
EXCEPT 
SELECT invoice_no
		, date_id
		, cust_id
		--, doc_type_id
		, src_purchase_invoice_id
FROM bl_3nf.ce_purchase_invoices cpi
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-982582089">invoice_no	date_id	cust_id	src_purchase_invoice_id
N/A	2999-12-31	-9999	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables bl_3nf.ce_sales_invoices and lnd.lnd_dim_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_no
		, merch_id
		--, ol_order_id
		, ol_id
		, date_id
		, status_id
		, cust_id
		--, doc_type_id
		, src_invoice_id
FROM bl_3nf.ce_sales_invoices csi
EXCEPT 
(
SELECT DISTINCT TRIM(invoice_no)
		, cm.merch_id
		--, ol_order_id
		, co.ol_id
		, to_date(ldi.date_id, &apos;yyyymmdd&apos;)
		, ci.status_id
		, cc.cust_id
		--, cdt.doc_type_id
		, invoice_id
FROM lnd.lnd_dim_invoices ldi
JOIN bl_3nf.ce_merchandisers cm 
ON ldi.merch_id = cm.src_merch_id 
JOIN bl_3nf.ce_outlets co  
ON ldi.ol_id = co.src_ol_id 
JOIN bl_3nf.ce_invoice_statuses ci 
ON ldi.status = ci.src_status 
JOIN bl_3nf.ce_customers cc  
ON ldi.cust_id = cc.src_cust_id 
JOIN bl_3nf.ce_doc_types cdt 
ON ldi.doc_type = cdt.src_doc_type
UNION 
SELECT DISTINCT TRIM(invoice_no)
		, cm.merch_id
		--, coo.ol_order_id
		, co.ol_id
		, to_date(lfs.date_id, &apos;yyyymmdd&apos;)
		, ci.status_id
		, cc.cust_id
		--, -9999 AS doc_type_id
		, invoice_id
FROM lnd.lnd_fact_sal_out_d lfs
JOIN bl_3nf.ce_merchandisers cm 
ON lfs.merch_id = cm.src_merch_id 
JOIN bl_3nf.ce_outlets co  
ON lfs.ol_id = co.src_ol_id 
JOIN bl_3nf.ce_invoice_statuses ci 
ON lfs.status = ci.src_status 
JOIN bl_3nf.ce_customers cc  
ON lfs.cust_id = cc.src_cust_id 
JOIN lnd.lnd_fact_outlet_order_h lfo
ON lfs.order_no = lfo.order_no
JOIN bl_3nf.ce_outlet_orders coo 
ON lfo.order_no = coo.src_order_no 
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1423994315">invoice_no	merch_id	ol_order_id	ol_id	date_id	status_id	cust_id	src_invoice_id
N/A	2999-12-31	-9999	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_doc_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT doc_type_name, src_doc_type, src_table, COUNT(*)
FROM bl_3nf.ce_doc_types
GROUP BY doc_type_name, src_doc_type, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_invoice_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT status_name, src_status, src_table, COUNT(*)
FROM bl_3nf.ce_invoice_statuses
GROUP BY status_name, src_status, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_long_name, cust_id, city_id, w_type_id, src_w_id, COUNT(*)
FROM bl_3nf.ce_warehouses
GROUP BY w_long_name, cust_id, city_id, w_type_id, src_w_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_warehouse_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_type_long_name, src_w_type_id, COUNT(*)
FROM bl_3nf.ce_warehouse_types
GROUP BY w_type_long_name, src_w_type_id
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_archived_stocks_evening" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, COUNT(*)
FROM bl_3nf.ce_archived_stocks_evening
GROUP BY w_id, date_id, product_id, stock, stock_in_packages
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_archived_stocks_morning" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_id, date_id, product_id, stock, stock_in_packages, COUNT(*)
FROM bl_3nf.ce_archived_stocks_morning
GROUP BY w_id, date_id, product_id, stock, stock_in_packages
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_purchase_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_no, date_id, cust_id, doc_type_id, src_purchase_invoice_id, src_table, COUNT(*)
FROM bl_3nf.ce_purchase_invoices
GROUP BY invoice_no, date_id, cust_id, doc_type_id, src_purchase_invoice_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking duplicates in the table ce_sales_invoices" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT invoice_no, merch_id, ol_order_id, ol_id, date_id, status_id, cust_id, doc_type_id, direct_sales_label, src_invoice_id, src_table, COUNT(*)
FROM bl_3nf.ce_sales_invoices
GROUP BY invoice_no, merch_id, ol_order_id, ol_id, date_id, status_id, cust_id, doc_type_id, direct_sales_label, src_invoice_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_doc_types(doc_type_name)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_doc_types
WHERE doc_type_name NOT IN (&apos;Correcting Stocks&apos;, &apos;Incomes&apos;, &apos;Not Set&apos;, &apos;Outcomes&apos;, &apos;Promo-Sales&apos;, &apos;Return&apos;, &apos;Write-Off&apos;, &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_doc_types(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_doc_types
WHERE src_table NOT IN (&apos;lnd_dim_invoices, lnd_dim_invoices_in&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_invoice_statuses(status_name)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT *
FROM bl_3nf.ce_invoice_statuses
WHERE status_name NOT IN (&apos;Видалено&apos;, &apos;Отримано&apos;, &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_invoice_statuses(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_invoice_statuses
WHERE src_table NOT IN (&apos;lnd_dim_invoices, lnd_fact_sal_out_d&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_warehouses(w_long_name)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT w_long_name 
FROM bl_3nf.ce_warehouses
WHERE w_long_name !~ &apos;^[A-Z]&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_warehouses(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_warehouses
WHERE src_table NOT IN (&apos;lnd_dim_warehouses&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_warehouse_types(w_type_long_name)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_warehouse_types
WHERE w_type_long_name NOT IN (&apos;Basic&apos;, &apos;Not Set&apos;, &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_warehouse_types(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_warehouse_types
WHERE src_table NOT IN (&apos;lnd_dim_warehouses&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_evening(stock)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT stocks_evening_id, COUNT(*) 
FROM bl_3nf.ce_archived_stocks_evening
WHERE stock &lt; 0
GROUP BY stocks_evening_id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="736479717">stocks_evening_id	count
-9999	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_evening(stock_in_packages)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT stocks_evening_id, COUNT(*) 
FROM bl_3nf.ce_archived_stocks_evening
WHERE stock_in_packages &lt; 0
AND stock_in_packages != -9999
GROUP BY stocks_evening_id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="736479717">stocks_evening_id	count
-9999	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_evening(date_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_archived_stocks_evening
WHERE date_id &lt; to_date(&apos;20151224&apos;, &apos;yyyymmdd&apos;) 
AND date_id &gt; to_date(&apos;20170127&apos;, &apos;yyyymmdd&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_evening(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_archived_stocks_evening 
WHERE src_table NOT IN (&apos;lnd_fact_archived_stocks_evening, bl_cl.temp_sales&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_morning(stock)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT stocks_morning_id, COUNT(*)  
FROM bl_3nf.ce_archived_stocks_morning
WHERE stock &lt; 0
GROUP BY stocks_morning_id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-647919063">stocks_morning_id	count
-9999	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_morning(stock_in_packages)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT stocks_morning_id, COUNT(*) 
FROM bl_3nf.ce_archived_stocks_morning
WHERE stock_in_packages &lt; 0
GROUP BY stocks_morning_id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-647919063">stocks_morning_id	count
-9999	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_morning(date_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_archived_stocks_morning
WHERE date_id &lt; to_date(&apos;20151224&apos;, &apos;yyyymmdd&apos;) 
AND date_id &gt; to_date(&apos;20170127&apos;, &apos;yyyymmdd&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_archived_stocks_morning(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_archived_stocks_morning 
WHERE src_table NOT IN (&apos;lnd_fact_archived_stocks_morning, bl_cl.temp_sales&apos;,  &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_purchase_invoices(src_purchase_invoice_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT src_purchase_invoice_id 
FROM bl_3nf.ce_purchase_invoices
WHERE src_purchase_invoice_id !~ &apos;^[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="194967814">src_purchase_invoice_id
N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_purchase_invoices(date_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_purchase_invoices
WHERE date_id &lt; to_date(&apos;20151224&apos;, &apos;yyyymmdd&apos;) 
AND date_id &gt; to_date(&apos;20170127&apos;, &apos;yyyymmdd&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_purchase_invoices(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_purchase_invoices
WHERE src_table NOT IN (&apos;lnd_dim_invoices_in, lnd_fact_sal_in_d&apos;, &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_sales_invoices(src_invoice_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT src_invoice_id 
FROM bl_3nf.ce_sales_invoices
WHERE src_invoice_id !~ &apos;^[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-421288162">src_invoice_id
N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_sales_invoices(date_id)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT *
FROM bl_3nf.ce_sales_invoices
WHERE date_id &lt; to_date(&apos;20151224&apos;, &apos;yyyymmdd&apos;) 
AND date_id &gt; to_date(&apos;20170127&apos;, &apos;yyyymmdd&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values in the table ce_sales_invoices(src_table)" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_sales_invoices
WHERE src_table NOT IN (&apos;lnd_dim_invoices, lnd_fact_sal_out_d&apos;, &apos;N/A&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Incorrect Column Values Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_areas" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_areas&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1299030167">ce_areas</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_cities" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_cities&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1565828666">ce_cities</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_districts" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_districts&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1964749576">ce_districts</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_countries" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_countries&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1345450217">ce_countries</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_regions" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_regions&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-994907870">ce_regions</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_times&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1281743575">ce_times</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_hours" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_hours&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1292638990">ce_hours</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_times&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1095317225">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_times	time_id	NO	smallint	null	int2
bl_3nf	ce_times	hour_id	NO	smallint	null	int2
bl_3nf	ce_times	time_name	NO	character	5	bpchar
bl_3nf	ce_times	src_table	NO	character varying	100	varchar
bl_3nf	ce_times	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_times	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_hours" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_hours&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="62026721">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_hours	hour_id	NO	smallint	null	int2
bl_3nf	ce_hours	hour_name	NO	character	13	bpchar
bl_3nf	ce_hours	src_table	NO	character varying	100	varchar
bl_3nf	ce_hours	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_hours	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_areas" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_areas&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1959025032">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_areas	area_id	NO	integer	null	int4
bl_3nf	ce_areas	area_name	NO	character varying	60	varchar
bl_3nf	ce_areas	area_name_en	NO	character varying	60	varchar
bl_3nf	ce_areas	city_id	NO	integer	null	int4
bl_3nf	ce_areas	src_area_id	NO	character varying	50	varchar
bl_3nf	ce_areas	src_table	NO	character varying	100	varchar
bl_3nf	ce_areas	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_areas	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_cities" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_cities&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="647633555">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_cities	city_id	NO	integer	null	int4
bl_3nf	ce_cities	city_name	NO	character varying	20	varchar
bl_3nf	ce_cities	city_name_en	NO	character varying	20	varchar
bl_3nf	ce_cities	district_id	NO	integer	null	int4
bl_3nf	ce_cities	src_city_id	NO	character varying	50	varchar
bl_3nf	ce_cities	src_table	NO	character varying	100	varchar
bl_3nf	ce_cities	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_cities	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_regions" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_regions&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2023397349">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_regions	region_id	NO	integer	null	int4
bl_3nf	ce_regions	region_name	NO	character varying	20	varchar
bl_3nf	ce_regions	region_name_en	NO	character varying	20	varchar
bl_3nf	ce_regions	country_id	NO	integer	null	int4
bl_3nf	ce_regions	src_region_id	NO	character varying	50	varchar
bl_3nf	ce_regions	src_table	NO	character varying	100	varchar
bl_3nf	ce_regions	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_regions	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_districts" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_districts&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="940265969">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_districts	district_id	NO	integer	null	int4
bl_3nf	ce_districts	district_name	NO	character varying	20	varchar
bl_3nf	ce_districts	district_name_en	NO	character varying	20	varchar
bl_3nf	ce_districts	region_id	NO	integer	null	int4
bl_3nf	ce_districts	src_district_id	NO	character varying	50	varchar
bl_3nf	ce_districts	src_table	NO	character varying	100	varchar
bl_3nf	ce_districts	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_districts	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_countries" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_countries&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1561501985">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_countries	country_id	NO	integer	null	int4
bl_3nf	ce_countries	country_name	NO	character varying	20	varchar
bl_3nf	ce_countries	src_country_id	NO	character varying	50	varchar
bl_3nf	ce_countries	src_table	NO	character varying	100	varchar
bl_3nf	ce_countries	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_countries	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_cities" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_cities&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1115976202">conname	condef
fk_ce_cities_district_id	FOREIGN KEY (district_id) REFERENCES bl_3nf.ce_districts(district_id)
pk_ce_cities	PRIMARY KEY (city_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_areas" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_areas&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1480353401">conname	condef
fk_ce_areas_city_id	FOREIGN KEY (city_id) REFERENCES bl_3nf.ce_cities(city_id)
pk_ce_areas	PRIMARY KEY (area_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_countries" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_countries&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2106124917">conname	condef
pk_ce_countries	PRIMARY KEY (country_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_regions" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_regions&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="107815890">conname	condef
fk_ce_regions_country_id	FOREIGN KEY (country_id) REFERENCES bl_3nf.ce_countries(country_id)
pk_ce_regions	PRIMARY KEY (region_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_districts" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_districts&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="942553083">conname	condef
fk_ce_districts_region_id	FOREIGN KEY (region_id) REFERENCES bl_3nf.ce_regions(region_id)
pk_ce_districts	PRIMARY KEY (district_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_times&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="76083804">conname	condef
fk_ce_times_hour_id	FOREIGN KEY (hour_id) REFERENCES bl_3nf.ce_hours(hour_id)
pk_ce_times	PRIMARY KEY (time_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_hours" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_hours&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1008235390">conname	condef
pk_ce_hours	PRIMARY KEY (hour_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_times and lnd.dim_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">((SELECT to_number(ldt.time_id,&apos;9999999.999&apos;) as time_id,
		to_number(ldt.hour_id, &apos;9999999.999&apos;) as hour_id,
		time_name
FROM lnd.lnd_dim_time ldt)
EXCEPT
(SELECT time_id,
		hour_id,
		time_name
FROM bl_3nf.ce_times ct))
UNION ALL
((SELECT time_id,
		hour_id,
		time_name
FROM bl_3nf.ce_times ct)
EXCEPT
(SELECT to_number(ldt.time_id,&apos;9999999.999&apos;) as time_id,
		to_number(ldt.hour_id, &apos;9999999.999&apos;) as hour_id,
		time_name
FROM lnd.lnd_dim_time ldt));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1232846260">time_id	hour_id	time_name
-9999	-9999	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_hours and lnd.dim_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">((SELECT to_number(ldt.hour_id, &apos;9999999.999&apos;) as hour_id
FROM lnd.lnd_dim_time ldt)
EXCEPT
(SELECT hour_id
FROM bl_3nf.ce_times ct))
UNION ALL
((SELECT hour_id
FROM bl_3nf.ce_times ct)
EXCEPT
(SELECT to_number(ldt.hour_id, &apos;9999999.999&apos;) as hour_id
FROM lnd.lnd_dim_time ldt));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1859159801">hour_id
-9999</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_cities and lnd.outlets/merchandisers/warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select city_name, city_name_en
from bl_3nf.ce_cities
except 
(select INITCAP(ldo.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldm.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.city_name=ldm.city_name 
union 
select INITCAP(ldw.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.city_name=ldw.city_name))
union all 
((select INITCAP(ldo.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldm.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.city_name=ldm.city_name 
union 
select INITCAP(ldw.city_name), INITCAP(city_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.city_name=ldw.city_name)
except 
select city_name, city_name_en
from bl_3nf.ce_cities);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-184537440">city_name	city_name_en
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_regions and lnd.outlets/merchandisers/warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select region_name, region_name_en
from bl_3nf.ce_regions
except 
(select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.region_name=ldm.region_name 
union 
select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.region_name=ldw.region_name))
union all 
((select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.region_name=ldm.region_name 
union 
select INITCAP(ldo.region_name), INITCAP(region_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.region_name=ldw.region_name)
except 
select region_name, region_name_en
from bl_3nf.ce_regions);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-243694158">region_name	region_name_en
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_countries and lnd.outlets/merchandisers/warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select country_name
from bl_3nf.ce_countries
except 
(select INITCAP(ldo.country_name)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldm.country_name)
from lnd.lnd_dim_merchandisers ldm 
union 
select INITCAP(ldw.country_name)
from lnd.lnd_dim_warehouses ldw))
union all 
((select INITCAP(ldo.country_name)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldm.country_name)
from lnd.lnd_dim_merchandisers ldm 
union 
select INITCAP(ldw.country_name)
from lnd.lnd_dim_warehouses ldw)
except 
select country_name
from bl_3nf.ce_countries);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1673857526">country_name
N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_districts and lnd.outlets/merchandisers/warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select district_name, district_name_en
from bl_3nf.ce_districts
except 
(select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.district_name=ldm.district_name 
union 
select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.district_name=ldw.district_name))
union all 
((select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_outlets ldo 
union 
select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_merchandisers ldm 
left join lnd.lnd_dim_outlets ldo on ldo.district_name=ldm.district_name 
union 
select INITCAP(ldo.district_name), INITCAP(district_name_en)
from lnd.lnd_dim_warehouses ldw 
left join lnd.lnd_dim_outlets ldo on ldo.district_name=ldw.district_name)
except 
select district_name, district_name_en
from bl_3nf.ce_districts);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1376422054">district_name	district_name_en
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in the tables bl_3nf.ce_areas and lnd.outlets/merchandisers/warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(select area_name, area_name_en
from bl_3nf.ce_areas ca 
except
select distinct initcap(trim(area_name)), initcap(trim(area_name_en))
from lnd.lnd_dim_outlets ldo)
union all
(select distinct initcap(trim(area_name)), initcap(trim(area_name_en))
from lnd.lnd_dim_outlets ldo
except 
select area_name, area_name_en
from bl_3nf.ce_areas ca);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1121817188">area_name	area_name_en
N/A	N/A</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_cities" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT city_name, city_name_en, src_table, COUNT(*)
FROM bl_3nf.ce_cities cc 
GROUP BY city_name, city_name_en, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_regions" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT region_name, region_name_en, src_table, COUNT(*)
FROM bl_3nf.ce_regions cr 
GROUP BY region_name, region_name_en, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_countries" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT country_name, src_table, COUNT(*)
FROM bl_3nf.ce_countries cc
GROUP BY country_name, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_districts" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT district_name, district_name_en, src_table, COUNT(*)
FROM bl_3nf.ce_districts cd 
GROUP BY district_name, district_name_en, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_areas" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT area_name, area_name_en, src_table, COUNT(*)
FROM bl_3nf.ce_areas ca 
GROUP BY area_name, area_name_en, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_hours" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*) 
FROM bl_3nf.ce_hours ch
GROUP BY hour_id 
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the duplicates in the table bl_3nf.ce_times" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT COUNT(*) 
FROM bl_3nf.ce_times ct 
GROUP BY time_id 
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_customers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_customers&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1086525256">ce_customers</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_distributors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_distributors&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="12743209">ce_distributors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_networks" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_networks&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1226432322">ce_networks</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_statuses&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-756945355">ce_outlet_statuses</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_products&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1090796383">ce_products</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_types&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-755670004">ce_product_types</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_groups&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1965375649">ce_product_groups</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_product_categories" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_categories&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-380338583">ce_product_categories</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_card_h&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-690435506">ce_outlet_card_h</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_purchases" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchases&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-194637835">ce_purchases</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of a table ce_sales" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.&quot;tables&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1282906385">ce_sales</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_customers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_customers&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="691188212">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_customers	cust_id	NO	integer	null
ce_customers	cust_name	NO	character varying	60
ce_customers	cust_name_en	NO	character varying	60
ce_customers	distr_id	NO	integer	null
ce_customers	insert_dt	NO	timestamp without time zone	null
ce_customers	src_cust_id	NO	character varying	50
ce_customers	src_table	NO	character varying	100
ce_customers	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_distributors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_distributors&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1369949307">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_distributors	distr_id	NO	integer	null
ce_distributors	distr_name	NO	character varying	50
ce_distributors	distr_name_en	NO	character varying	50
ce_distributors	insert_dt	NO	timestamp without time zone	null
ce_distributors	src_distr_id	NO	character varying	50
ce_distributors	src_table	NO	character varying	100
ce_distributors	update_dt	NO	timestamp without time zone	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_networks" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_networks&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="443798710">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_networks	insert_dt	NO	timestamp without time zone	null
ce_networks	network_id	NO	integer	null
ce_networks	network_name	NO	character varying	40
ce_networks	network_name_en	NO	character varying	40
ce_networks	src_network_id	NO	character varying	50
ce_networks	src_table	NO	character varying	100
ce_networks	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_statuses&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="863645300">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_outlet_statuses	insert_dt	NO	timestamp without time zone	null
ce_outlet_statuses	src_status	NO	character varying	50
ce_outlet_statuses	src_table	NO	character varying	100
ce_outlet_statuses	status_id	NO	integer	null
ce_outlet_statuses	status_name	NO	character varying	20
ce_outlet_statuses	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_products&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-685937497">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_products	end_dt	NO	timestamp without time zone	null
ce_products	insert_dt	NO	timestamp without time zone	null
ce_products	is_active	NO	character varying	10
ce_products	product_code	NO	character varying	10
ce_products	product_id	NO	integer	null
ce_products	product_name	NO	character varying	100
ce_products	product_name_en	NO	character varying	100
ce_products	product_type_id	NO	integer	null
ce_products	src_product_id	NO	character varying	50
ce_products	src_table	NO	character varying	100
ce_products	start_dt	NO	timestamp without time zone	null
ce_products	update_dt	NO	timestamp without time zone	null
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_types&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-736114495">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_types	insert_dt	NO	timestamp without time zone	null
ce_product_types	product_group_id	NO	integer	null
ce_product_types	product_type_id	NO	integer	null
ce_product_types	product_type_name	NO	character varying	40
ce_product_types	product_type_name_en	NO	character varying	40
ce_product_types	src_product_type_id	NO	character varying	50
ce_product_types	src_table	NO	character varying	100
ce_product_types	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_groups&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-307336740">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_groups	insert_dt	NO	timestamp without time zone	null
ce_product_groups	product_category_id	NO	integer	null
ce_product_groups	product_group_id	NO	integer	null
ce_product_groups	product_group_name	NO	character varying	60
ce_product_groups	product_group_name_en	NO	character varying	60
ce_product_groups	src_product_group_id	NO	character varying	50
ce_product_groups	src_table	NO	character varying	100
ce_product_groups	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_product_categories" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_product_categories&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-234592211">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_product_categories	insert_dt	NO	timestamp without time zone	null
ce_product_categories	product_category_id	NO	integer	null
ce_product_categories	product_category_name	NO	character varying	30
ce_product_categories	product_category_name_en	NO	character varying	30
ce_product_categories	src_product_category_id	NO	character varying	50
ce_product_categories	src_table	NO	character varying	100
ce_product_categories	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
    table_name, 
    column_name, 
    is_nullable,
	data_type,
	character_maximum_length
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_card_h&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="25626262">table_name	column_name	is_nullable	data_type	character_maximum_length
ce_outlet_card_h	begin_time	NO	date	null
ce_outlet_card_h	date_id	NO	date	null
ce_outlet_card_h	end_time	NO	date	null
ce_outlet_card_h	insert_dt	NO	timestamp without time zone	null
ce_outlet_card_h	merch_id	NO	integer	null
ce_outlet_card_h	ol_card_date	NO	date	null
ce_outlet_card_h	ol_card_id	NO	integer	null
ce_outlet_card_h	ol_id	NO	integer	null
ce_outlet_card_h	src_ol_card_id	NO	character varying	50
ce_outlet_card_h	src_table	NO	character varying	100
ce_outlet_card_h	success	NO	smallint	null
ce_outlet_card_h	update_dt	NO	timestamp without time zone	null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_purchases" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name, 
      column_name, 
      column_default,
      is_nullable,
  data_type,
  character_maximum_length,
  numeric_precision,
  numeric_scale
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_purchases&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1937704386">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_purchases	amount	null	NO	numeric	null	19	11
ce_purchases	insert_dt	null	NO	timestamp without time zone	null	null	null
ce_purchases	package_qty	null	NO	numeric	null	23	17
ce_purchases	price	null	NO	numeric	null	13	8
ce_purchases	product_id	null	NO	integer	null	32	0
ce_purchases	product_qty	null	NO	numeric	null	10	3
ce_purchases	purchase_id	default_identity(206643, 0, &apos;1,1&apos;::text)	NO	integer	null	32	0
ce_purchases	purchase_invoice_id	null	NO	integer	null	32	0
ce_purchases	src_table	null	NO	character varying	100	null	null
ce_purchases	update_dt	null	NO	timestamp without time zone	null	null	null
ce_purchases	weight_kg	null	NO	numeric	null	23	17</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of a table ce_sales" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_name, 
     column_name, 
     column_default,
     is_nullable,
	data_type,
	character_maximum_length,
	numeric_precision,
 	numeric_scale
FROM 
   information_schema.&quot;columns&quot;
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_sales&apos;
order by column_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-758912375">table_name	column_name	column_default	is_nullable	data_type	character_maximum_length	numeric_precision	numeric_scale
ce_sales	amount	null	NO	numeric	null	19	11
ce_sales	insert_dt	null	NO	timestamp without time zone	null	null	null
ce_sales	invoice_id	null	NO	integer	null	32	0
ce_sales	package_qty	null	NO	numeric	null	23	17
ce_sales	price	null	NO	numeric	null	13	8
ce_sales	product_id	null	NO	integer	null	32	0
ce_sales	product_qty	null	NO	numeric	null	10	3
ce_sales	sale_id	default_identity(245544, 0, &apos;1,1&apos;::text)	NO	integer	null	32	0
ce_sales	src_table	null	NO	character varying	100	null	null
ce_sales	update_dt	null	NO	timestamp without time zone	null	null	null
ce_sales	weight_kg	null	NO	numeric	null	23	17</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table ce_customers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_customers&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1890855091">conname	condef
fk_ce_customers_distr_id	FOREIGN KEY (distr_id) REFERENCES bl_3nf.ce_distributors(distr_id)
pk_ce_customers	PRIMARY KEY (cust_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_distributors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_distributors&apos;::regclass
order by conname;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2100169301">conname	condef
pk_ce_distributors	PRIMARY KEY (distr_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_networks" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_networks&apos;::regclass
order by conname;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1107677396">conname	condef
pk_ce_networks	PRIMARY KEY (network_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_outlet_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_statuses&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1365769423">conname	condef
pk_ce_outlet_statuses	PRIMARY KEY (status_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_products&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1815256241">conname	condef
ce_products_2_pkey1	PRIMARY KEY (product_id, start_dt)
fk_ce_products_product_type_id	FOREIGN KEY (product_type_id) REFERENCES bl_3nf.ce_product_types(product_type_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_types&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1670198733">conname	condef
fk_ce_product_types_product_group_id	FOREIGN KEY (product_group_id) REFERENCES bl_3nf.ce_product_groups(product_group_id)
pk_ce_product_types	PRIMARY KEY (product_type_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_groups&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1535664763">conname	condef
fk_ce_product_groups_product_category_id	FOREIGN KEY (product_category_id) REFERENCES bl_3nf.ce_product_categories(product_category_id)
pk_ce_product_groups	PRIMARY KEY (product_group_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_product_categories" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_product_categories&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="119964557">conname	condef
pk_ce_product_categories	PRIMARY KEY (product_category_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_card_h&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2061493885">conname	condef
fk_ce_outlet_card_h_merch_id	FOREIGN KEY (merch_id) REFERENCES bl_3nf.ce_merchandisers(merch_id)
fk_ce_outlet_card_h_ol_id	FOREIGN KEY (ol_id) REFERENCES bl_3nf.ce_outlets(ol_id)
pk_outlet_card_h	PRIMARY KEY (ol_card_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_purchases" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_purchases&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1998400132">conname	condef
fk_ce_purchases_purchase_invoice_id	FOREIGN KEY (purchase_invoice_id) REFERENCES bl_3nf.ce_purchase_invoices(purchase_invoice_id)
fk_ce_purchases_product_id	FOREIGN KEY (product_id) REFERENCES bl_3nf.ce_products(product_id)
pk_ce_purchases	PRIMARY KEY (purchase_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Check constrains in table in table ce_sales" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_sales&apos;::regclass
order by conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Constrains Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-247386926">conname	condef
fk_ce_invoice_id	FOREIGN KEY (invoice_id) REFERENCES bl_3nf.ce_sales_invoices (invoice_id)
fk_ce_product_id	FOREIGN KEY (product_id) REFERENCES bl_3nf.ce_products(product_id)
pk_ce_product_categories	PRIMARY KEY (product_category_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_customers" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT cust_id, cust_name, cust_name_en, distr_id, distr_id, src_table, COUNT(*)
FROM bl_3nf.ce_customers
GROUP BY cust_id, cust_name, cust_name_en, distr_id, distr_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_distributors" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT distr_id, distr_name, distr_name_en, src_distr_id, src_table, COUNT(*)
FROM bl_3nf.ce_distributors
GROUP BY distr_id, distr_name, distr_name_en, src_distr_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_networks" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT network_id, network_name, network_name_en, src_network_id, src_table, COUNT(*)
FROM bl_3nf.ce_networks
GROUP BY network_id, network_name, network_name_en, src_network_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_statuses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT status_id, status_name, src_status, src_table, COUNT(*)
FROM bl_3nf.ce_outlet_statuses
GROUP BY status_id, status_name, src_status, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_id, product_name, product_name_en, product_code, product_type_id, src_product_id, src_table, COUNT(*)
FROM bl_3nf.ce_products
GROUP BY product_id, product_name, product_name_en, product_code, product_type_id, src_product_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_types" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_type_id, product_type_name, product_type_name_en, product_group_id, src_product_type_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_types
GROUP BY product_type_id, product_type_name, product_type_name_en, product_group_id, src_product_type_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_groups" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_group_id, product_group_name, product_group_name_en, product_category_id, src_product_group_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_groups
GROUP BY product_group_id, product_group_name, product_group_name_en, product_category_id, src_product_group_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_product_categories" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_category_id, product_category_name, product_category_name_en, src_product_category_id, src_table, COUNT(*)
FROM bl_3nf.ce_product_categories
GROUP BY product_category_id, product_category_name, product_category_name_en, src_product_category_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_card_id, date_id, merch_id, ol_id, success, ol_card_date, begin_time, end_time, src_ol_card_id, src_table, COUNT(*)
FROM bl_3nf.ce_outlet_card_h
GROUP BY ol_card_id, date_id, merch_id, ol_id, success, ol_card_date, begin_time, end_time, src_ol_card_id, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_purchases" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT purchase_id, purchase_invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table, COUNT(*)
FROM bl_3nf.ce_purchases
GROUP BY purchase_id, purchase_invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_sales" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT sale_id, invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table, COUNT(*)
FROM bl_3nf.ce_sales
GROUP BY sale_id, invoice_id, product_id, product_qty, package_qty, weight_kg, amount, price, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_customers and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">(SELECT cust_name
	, cust_name_en
	, src_cust_id
	, src_table
FROM bl_3nf.ce_customers
where cust_id != -9999
EXCEPT
(SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(m.cust_name_en, &apos; &apos;))
	, initcap(btrim(m.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(o.cust_name_en, &apos; &apos;))
	, initcap(btrim(o.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name))
union all
((SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct initcap(btrim(cust_name, &apos; &apos;))
	, initcap(btrim(cust_name_en, &apos; &apos;))
	, initcap(btrim(cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(m.cust_name_en, &apos; &apos;))
	, initcap(btrim(m.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct initcap(btrim(w.cust_name, &apos; &apos;))
	, initcap(btrim(o.cust_name_en, &apos; &apos;))
	, initcap(btrim(o.cust_id, &apos; &apos;))
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
except 
(SELECT cust_name
	, cust_name_en
	, src_cust_id
	, src_table
FROM bl_3nf.ce_customers
where cust_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_distributors and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT distr_name
	, distr_name_en
	, src_distr_id
	, src_table
FROM bl_3nf.ce_distributors
where distr_id != -9999
EXCEPT
(SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE m.distr_id WHEN &apos;8&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(m.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE o.distr_id WHEN &apos;8&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(o.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
union
((SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_outlets
union
SELECT distinct 
	CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name, &apos; &apos;))
    end distr_name
	, CASE distr_id WHEN &apos;8&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE m.distr_id WHEN &apos;8&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(m.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(m.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_merchandisers m on m.cust_name = w.cust_name
union 
SELECT distinct 
	CASE w.distr_id WHEN &apos;8&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(w.distr_name, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(w.distr_name, &apos; &apos;))
    end distr_name
	, CASE o.distr_id WHEN &apos;8&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_1&apos;
          WHEN &apos;11&apos; THEN initcap(btrim(o.distr_name_en, &apos; &apos;)) || &apos;_2&apos;
        ELSE initcap(btrim(o.distr_name_en, &apos; &apos;))
    end distr_name_en
	, initcap(btrim(w.distr_id, &apos; &apos;)) AS src_distr_id
	, &apos;lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses&apos; as src_table
FROM lnd.lnd_dim_warehouses w
left join lnd.lnd_dim_outlets o on o.cust_name = w.cust_name)
except
(SELECT distr_name
	, distr_name_en
	, src_distr_id
	, src_table
FROM bl_3nf.ce_distributors
where distr_id != -9999))
order by distr_name, src_table;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_networks and lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT network_name
	, network_name_en
	, src_network_id
FROM bl_3nf.ce_networks
where network_id != -9999
EXCEPT
(SELECT distinct 
	 initcap(btrim(network_name, &apos; &apos;))
	, initcap(btrim(network_name_en, &apos; &apos;))
	, initcap(btrim(network_id, &apos; &apos;)) as src_network_id
FROM lnd.lnd_dim_outlets)
union
((SELECT distinct 
	initcap(btrim(network_name, &apos; &apos;))
	, initcap(btrim(network_name_en, &apos; &apos;))
	, initcap(btrim(network_id, &apos; &apos;)) as src_network_id
FROM lnd.lnd_dim_outlets)
except
(SELECT network_name
	, network_name_en
	, src_network_id
FROM bl_3nf.ce_networks
where network_id != -9999))
order by network_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_outlet_statuses and lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT status_name
	, src_status
	, src_table
FROM bl_3nf.ce_outlet_statuses
where status_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(status_name, &apos; &apos;))
	, initcap(btrim(status, &apos; &apos;))
	, &apos;lnd_dim_outlets&apos; as src_table
FROM lnd.lnd_dim_outlets)
union
(SELECT distinct 
	initcap(btrim(status_name, &apos; &apos;))
	, initcap(btrim(status, &apos; &apos;))
	, &apos;lnd_dim_outlets&apos; as src_table
FROM lnd.lnd_dim_outlets
except
(SELECT status_name
	, src_status
	, src_table
FROM bl_3nf.ce_outlet_statuses
where status_id != -9999))
order by status_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_products and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_name
	, product_name_en
	, product_code
	, src_table
FROM bl_3nf.ce_products
where product_id != -9999
EXCEPT
(SELECT distinct 
	INITCAP(REPLACE(TRIM(product_name), chr(160), &apos;&apos;))
	, INITCAP(REPLACE(TRIM(product_name_en), chr(160), &apos;&apos;))
	, upper(btrim(product_code, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	INITCAP(REPLACE(TRIM(product_name), chr(160), &apos;&apos;))
	, INITCAP(REPLACE(TRIM(product_name_en), chr(160), &apos;&apos;))
	, upper(btrim(product_code, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_name
	, product_name_en
	, product_code
	, src_table
FROM bl_3nf.ce_products
where product_id != -9999))
order by product_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_types and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_type_name
	, product_type_name_en
	, src_product_type_id
	, src_table
FROM bl_3nf.ce_product_types
where product_type_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_type_name, &apos; &apos;))
	, initcap(btrim(product_type_name_en, &apos; &apos;))
	, initcap(btrim(product_type_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_type_name, &apos; &apos;))
	, initcap(btrim(product_type_name_en, &apos; &apos;))
	, initcap(btrim(product_type_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_type_name
	, product_type_name_en
	, src_product_type_id
	, src_table
FROM bl_3nf.ce_product_types
where product_type_id != -9999))
order by product_type_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_groups and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_group_name
	, product_group_name_en
	, src_product_group_id
	, src_table
FROM bl_3nf.ce_product_groups
where product_group_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_group_name, &apos; &apos;))
	, initcap(btrim(prod_group_name_en, &apos; &apos;))
	, initcap(btrim(prod_group_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_group_name, &apos; &apos;))
	, initcap(btrim(prod_group_name_en, &apos; &apos;))
	, initcap(btrim(prod_group_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_group_name
	, product_group_name_en
	, src_product_group_id
	, src_table
FROM bl_3nf.ce_product_groups
where product_group_id != -9999))
order by product_group_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_product_categories and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_category_name
	, product_category_name_en
	, src_product_category_id
	, src_table
FROM bl_3nf.ce_product_categories
where product_category_id != -9999
EXCEPT
(SELECT distinct 
	initcap(btrim(prod_category_name, &apos; &apos;))
	, initcap(btrim(prod_category_name_en, &apos; &apos;))
	, initcap(btrim(prod_category_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product)
union
(SELECT distinct 
	initcap(btrim(prod_category_name, &apos; &apos;))
	, initcap(btrim(prod_category_name_en, &apos; &apos;))
	, initcap(btrim(prod_category_id, &apos; &apos;))
	, &apos;lnd_dim_product&apos; as src_table
FROM lnd.lnd_dim_product
except
(SELECT product_category_name
	, product_category_name_en
	, src_product_category_id
	, src_table
FROM bl_3nf.ce_product_categories
where product_category_id != -9999))
order by product_category_name;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_outlet_card_h and lnd_fact_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT date_id
	, success
	, ol_card_date
	, begin_time
	, end_time
	, src_ol_card_id
	, src_table
FROM bl_3nf.ce_outlet_card_h
where ol_card_id != -9999
EXCEPT
(SELECT TO_DATE(date_id, &apos;yyyymmdd&apos;)
	, success::integer
	, TO_DATE(TO_DATE(ol_card_date, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as ol_card_date
	, TO_DATE(TO_DATE(begin_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as begin_time
	, TO_DATE(TO_DATE(end_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as end_time
	, ol_card_id AS src_ol_card_id
	, &apos;lnd_fact_outlet_card_h&apos; AS src_table
FROM lnd.lnd_fact_outlet_card_h
)
union
((SELECT TO_DATE(date_id, &apos;yyyymmdd&apos;)
	, success::integer
	, TO_DATE(TO_DATE(ol_card_date, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as ol_card_date
	, TO_DATE(TO_DATE(begin_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as begin_time
	, TO_DATE(TO_DATE(end_time, &apos;dd-mm-yyyy&apos;), &apos;yyyy-mm-dd&apos;) as end_time
	, ol_card_id AS src_ol_card_id
	, &apos;lnd_fact_outlet_card_h&apos; AS src_table
FROM lnd.lnd_fact_outlet_card_h)
except 
(SELECT date_id
	, success
	, ol_card_date
	, begin_time
	, end_time
	, src_ol_card_id
	, src_table
FROM bl_3nf.ce_outlet_card_h
where ol_card_id != -9999))
order by ol_card_date, src_ol_card_id;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_purchases and lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_purchases
where purchase_id != -9999
EXCEPT
(SELECT ABS(to_number(product_qty, &apos;9999999,999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999,999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999,999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999,999&apos;)) amount
	, ABS(to_number(price, &apos;9999999,999&apos;)) price
	, &apos;lnd_fact_sal_in_d&apos; AS src_table
FROM lnd.lnd_fact_sal_in_d
)
union
((SELECT ABS(to_number(product_qty, &apos;9999999,999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999,999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999,999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999,999&apos;)) amount
	, ABS(to_number(price, &apos;9999999,999&apos;)) price
	, &apos;lnd_fact_sal_in_d&apos; AS src_table
FROM lnd.lnd_fact_sal_in_d)
except 
(select product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_purchases
where purchase_id != -9999))
order by product_qty, package_qty, weight_kg, amount, price;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Row-by-row check in tables ce_sales and lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_sales
where sale_id != -9999
EXCEPT
(SELECT ABS(to_number(product_qty, &apos;9999999,999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999,999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999,999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999,999&apos;)) amount
	, ABS(to_number(price, &apos;9999999,999&apos;)) price
	, &apos;lnd_fact_sal_out_d&apos; AS src_table
FROM lnd.lnd_fact_sal_out_d
)
union
((SELECT ABS(to_number(product_qty, &apos;9999999,999&apos;)) product_qty
	, ABS(to_number(package_qty, &apos;9999999,999&apos;)) package_qty
	, ABS(to_number(weight_kg, &apos;9999999,999&apos;)) weight_kg
	, ABS(to_number(amount, &apos;9999999,999&apos;)) amount
	, ABS(to_number(price, &apos;9999999,999&apos;)) price
	, &apos;lnd_fact_sal_out_d&apos; AS src_table
FROM lnd.lnd_fact_sal_out_d)
except 
(select product_qty
	, package_qty
	, weight_kg
	, amount
	, price
	, src_table
FROM bl_3nf.ce_sales
where sale_id != -9999))
order by product_qty, package_qty, weight_kg, amount, price;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">row</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Row-by-row Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">row_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_customers and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_customers cc 
where cust_id != -9999
except 
(SELECT count (distinct cust_name)
FROM 
(select distinct cust_name
from lnd.lnd_dim_outlets
union
select distinct cust_name
FROM lnd.lnd_dim_merchandisers
union
select distinct cust_name
FROM lnd.lnd_dim_warehouses w)aaa)
UNION
((SELECT count (distinct cust_name)
FROM 
(select distinct cust_name
from lnd.lnd_dim_outlets
union
select distinct cust_name
FROM lnd.lnd_dim_merchandisers
union
select distinct cust_name
FROM lnd.lnd_dim_warehouses w)aaa)
except 
(select count(*) from bl_3nf.ce_customers cc 
where cust_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Number of rows Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1354575653">count
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_distributors and lnd_dim_outlets, lnd_dim_merchandisers, lnd_dim_warehouses" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_distributors cc 
where distr_id != -9999
except 
(SELECT count (distinct distr_id)
FROM 
(select distinct distr_id 
from lnd.lnd_dim_outlets
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_warehouses w) aaa)
union 
((SELECT count (distinct distr_id)
FROM 
(select distinct distr_id 
from lnd.lnd_dim_outlets
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_merchandisers
union
SELECT distinct distr_id 
FROM lnd.lnd_dim_warehouses w) aaa)
except 
select count(*) from bl_3nf.ce_distributors cc 
where distr_id != -9999);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Number of rows Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1354575653">count
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_networks and lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_networks cc 
where network_id != -9999
except 
(SELECT count (distinct network_id)
FROM lnd.lnd_dim_outlets)
union
((SELECT count (distinct network_id)
FROM lnd.lnd_dim_outlets)
except
(select count(*) from bl_3nf.ce_networks cc 
where network_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_outlet_statuses and lnd_dim_outlets" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_outlet_statuses cc 
where status_id != -9999
except 
(SELECT count (distinct status_name)
FROM lnd.lnd_dim_outlets)
union 
((SELECT count (distinct status_name)
FROM lnd.lnd_dim_outlets
except
select count(*) from bl_3nf.ce_outlet_statuses cc 
where status_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_products and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_products cc 
where product_id != -9999
except 
(SELECT count (distinct product_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct product_id)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_products cc 
where product_id != -9999)</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_types and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_product_types cc 
where product_group_id != -9999
except 
(SELECT count (distinct product_type_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct product_type_id)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_product_types cc 
where product_group_id != -9999)</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_groups and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_product_groups cc 
where product_group_id != -9999
except 
(SELECT count (distinct prod_group_id)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct prod_group_id)
FROM lnd.lnd_dim_product
except 
(select count(*) from bl_3nf.ce_product_groups cc 
where product_group_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_product_categories and lnd_dim_product" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_product_categories cc 
where product_category_id != -9999
except 
(SELECT count (distinct prod_category_name)
FROM lnd.lnd_dim_product)
union 
(SELECT count (distinct prod_category_name)
FROM lnd.lnd_dim_product
except
select count(*) from bl_3nf.ce_product_categories cc 
where product_category_id != -9999)</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_outlet_card_h and lnd_fact_outlet_card_h" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_outlet_card_h cc 
where ol_card_id != -9999
except 
(SELECT count (distinct ol_card_id)
FROM lnd.lnd_fact_outlet_card_h)
UNION
((SELECT count (distinct ol_card_id)
FROM lnd.lnd_fact_outlet_card_h
)
except 
(select count(*) from bl_3nf.ce_outlet_card_h cc 
where ol_card_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_purchases and lnd_fact_sal_in_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_purchases cc 
where purchase_id != -9999
except 
(SELECT count (*)
FROM lnd.lnd_fact_sal_in_d)
UNION
((SELECT count (*)
FROM lnd.lnd_fact_sal_in_d
)
except 
(select count(*) from bl_3nf.ce_purchases cc 
where purchase_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the number of rows in tables ce_sales and lnd_fact_sal_out_d" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select count(*) from bl_3nf.ce_sales cc 
where sale_id != -9999
except 
(SELECT count (*)
FROM lnd.lnd_fact_sal_out_d)
UNION
((SELECT count (*)
FROM lnd.lnd_fact_sal_out_d
)
except 
(select count(*) from bl_3nf.ce_sales cc 
where sale_id != -9999));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_outlet_orders" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_orders&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-331601350">ce_outlet_orders</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_distribution&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1650097639">ce_outlet_distribution</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the existence of the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT table_name
FROM information_schema.tables
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_order_products&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">name</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Table exist Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-255429238">ce_outlet_order_products</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
              <stringProp name="Scope.variable">name_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_outlet_orders" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_orders&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-336265561">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_orders	ol_order_id	NO	integer	null	int4
bl_3nf	ce_outlet_orders	date_id	NO	date	null	date
bl_3nf	ce_outlet_orders	merch_id	NO	integer	null	int4
bl_3nf	ce_outlet_orders	ol_id	NO	integer	null	int4
bl_3nf	ce_outlet_orders	w_id	NO	integer	null	int4
bl_3nf	ce_outlet_orders	begin_minute_id	NO	smallint	null	int2
bl_3nf	ce_outlet_orders	end_minute_id	NO	smallint	null	int2
bl_3nf	ce_outlet_orders	minutes_spent	NO	smallint	null	int2
bl_3nf	ce_outlet_orders	src_order_no	NO	character varying	50	varchar
bl_3nf	ce_outlet_orders	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_orders	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_orders	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_distribution&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2131393754">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_distribution	ol_distr_id	NO	integer	null	int4
bl_3nf	ce_outlet_distribution	ol_id	NO	integer	null	int4
bl_3nf	ce_outlet_distribution	merch_id	NO	integer	null	int4
bl_3nf	ce_outlet_distribution	date_id	NO	date	null	date
bl_3nf	ce_outlet_distribution	product_id	NO	smallint	null	int2
bl_3nf	ce_outlet_distribution	present_qty	NO	numeric	null	numeric
bl_3nf	ce_outlet_distribution	price	NO	numeric	null	numeric
bl_3nf	ce_outlet_distribution	present_amount	NO	numeric	null	numeric
bl_3nf	ce_outlet_distribution	weight	NO	numeric	null	numeric
bl_3nf	ce_outlet_distribution	begin_minute_id	NO	smallint	null	int2
bl_3nf	ce_outlet_distribution	end_minute_id	NO	smallint	null	int2
bl_3nf	ce_outlet_distribution	minutes_spent	NO	smallint	null	int2
bl_3nf	ce_outlet_distribution	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_distribution	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_distribution	update_dt	NO	timestamp without time zone	null	timestamp</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking the metadata of the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT 
	table_schema
	, table_name
	, column_name
	, is_nullable
	, data_type
	, character_maximum_length
	, udt_name
FROM information_schema.columns
WHERE table_schema = &apos;bl_3nf&apos;
AND table_name = &apos;ce_outlet_order_products&apos;
ORDER BY ordinal_position;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="825960724">table_schema	table_name	column_name	is_nullable	data_type	character_maximum_length	udt_name
bl_3nf	ce_outlet_order_products	ol_order_product_id	NO	integer	null	int4
bl_3nf	ce_outlet_order_products	ol_card_id	NO	integer	null	int4
bl_3nf	ce_outlet_order_products	ol_order_id	NO	integer	null	int4
bl_3nf	ce_outlet_order_products	product_id	NO	integer	null	int4
bl_3nf	ce_outlet_order_products	product_qty	NO	numeric	null	numeric
bl_3nf	ce_outlet_order_products	weight_kg	NO	numeric	null	numeric
bl_3nf	ce_outlet_order_products	price	NO	numeric	null	numeric
bl_3nf	ce_outlet_order_products	vat	NO	numeric	null	numeric
bl_3nf	ce_outlet_order_products	amount	NO	numeric	null	numeric
bl_3nf	ce_outlet_order_products	src_table	NO	character varying	100	varchar
bl_3nf	ce_outlet_order_products	insert_dt	NO	timestamp without time zone	null	timestamp
bl_3nf	ce_outlet_order_products	update_dt	NO	timestamp without time zone	null	timestamp
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values (product_qty) in the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_outlet_order_products
WHERE product_qty &lt;= 0 AND product_qty != -9999 ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values (weight_kg) in the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_outlet_order_products
WHERE weight_kg &lt; 0 AND weight_kg != -9999 ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking incorrect values (price) in the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * 
FROM bl_3nf.ce_outlet_order_products
WHERE price &lt; 0 AND price != -9999 ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">result</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">result_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_outlet_orders" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_orders&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1694827097">conname	condef
fk_ce_outlet_orders_begin_minute_id	FOREIGN KEY (begin_minute_id) REFERENCES bl_3nf.ce_times(time_id)
fk_ce_outlet_orders_end_minute_id	FOREIGN KEY (end_minute_id) REFERENCES bl_3nf.ce_times(time_id)
fk_ce_outlet_orders_merch_id	FOREIGN KEY (merch_id) REFERENCES bl_3nf.ce_merchandisers(merch_id)
fk_ce_outlet_orders_ol_id	FOREIGN KEY (ol_id) REFERENCES bl_3nf.ce_outlets(ol_id)
fk_ce_outlet_orders_w_id	FOREIGN KEY (w_id) REFERENCES bl_3nf.ce_warehouses(w_id)
pk_ce_outlet_orders	PRIMARY KEY (ol_order_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_distribution&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-922773633">conname	condef
fk_ce_outlet_distribution_begin_minute_id	FOREIGN KEY (begin_minute_id) REFERENCES bl_3nf.ce_times(time_id)
fk_ce_outlet_distribution_end_minute_id	FOREIGN KEY (end_minute_id) REFERENCES bl_3nf.ce_times(time_id)
fk_ce_outlet_distribution_merch_id	FOREIGN KEY (merch_id) REFERENCES bl_3nf.ce_merchandisers(merch_id)
fk_ce_outlet_distribution_ol_id	FOREIGN KEY (ol_id) REFERENCES bl_3nf.ce_outlets(ol_id)
pk_ce_outlet_distribution	PRIMARY KEY (ol_distr_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Checking constraints of the table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT conname, pg_catalog.pg_get_constraintdef(r.&quot;oid&quot;, true) AS condef
FROM pg_catalog.pg_constraint r
WHERE r.conrelid = &apos;bl_3nf.ce_outlet_order_products&apos;::regclass
ORDER BY conname;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Metadata Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-335018818">conname	condef
ce_outlet_order_products_ol_card_id	FOREIGN KEY (ol_card_id) REFERENCES bl_3nf.ce_outlet_card_h(ol_card_id)
ce_outlet_order_products_ol_order_id	FOREIGN KEY (ol_order_id) REFERENCES bl_3nf.ce_outlet_orders(ol_order_id)
pk_ce_outlet_order_products	PRIMARY KEY (ol_order_product_id)</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_orders" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_order_id
	, date_id
	, merch_id
	, ol_id
	, w_id
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, src_order_no
	, src_table
	, COUNT(*)
FROM bl_3nf.ce_outlet_orders
GROUP BY ol_order_id
	, date_id
	, merch_id
	, ol_id
	, w_id
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, src_order_no
	, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_distribution" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_distr_id
	, ol_id
	, date_id
	, merch_id
	, product_id
	, present_qty
	, price
	, present_amount
	, weight
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, src_table
	, COUNT(*)
FROM bl_3nf.ce_outlet_distribution
GROUP BY ol_distr_id
	, ol_id
	, date_id
	, merch_id
	, product_id
	, present_qty
	, price
	, present_amount
	, weight
	, begin_minute_id
	, end_minute_id
	, minutes_spent
	, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Сheck duplicates in a table ce_outlet_order_products" enabled="true">
            <stringProp name="dataSource">pool_1</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ol_order_product_id
	, ol_card_id
	, ol_order_id
	, product_id
	, weight_kg
	, src_table
	, COUNT(*)
FROM bl_3nf.ce_outlet_order_products
GROUP BY ol_order_product_id
	, ol_card_id
	, ol_order_id
	, product_id
	, weight_kg
	, src_table
HAVING COUNT(*) &gt; 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">dupl</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicates Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="48">0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">dupl_#</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
